/// apply various patches to vanilla creatures ///

// process item replacements for creature files           //
// this is done in the beginning because some of the      //
// new creatures are copied from the patched vanilla ones //

ACTION_PHP_EACH item_replacements AS record => int BEGIN
  ACTION_IF "%record_0%" STRING_EQUAL_CASE "cre" AND FILE_EXISTS_IN_GAME "%record_1%" BEGIN
    COPY_EXISTING ~%record_1%~ ~override~
      LPF ~S!FIND_AND_REPLACE_ITEM~ STR_VAR to_replace = EVALUATE_BUFFER "%record_2%" replace_with = EVALUATE_BUFFER "%record_3%" END
      BUT_ONLY
  END
END

// Patching various attributes and stats for existing enemy creatures //

COPY_EXISTING ~shadra01.cre~ ~override/shadra01.cre~
  WRITE_LONG  0x14   57500 // xp
  WRITE_LONG  0x1c    6598 // gold
  WRITE_SHORT 0x24     184 // current hp
  WRITE_SHORT 0x26     184 // max hp
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a     100 // resist cold
  WRITE_BYTE  0x5b      50 // resist electricity
  WRITE_BYTE  0x5c     100 // resist acid
  WRITE_BYTE  0x5d      85 // resist magic
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x23f     15 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~S!misc02~ #0 #0 #0 ~UNSTEALABLE~ ~INV12~
  ADD_CRE_ITEM ~scrl6m~ #0 #0 #0 ~UNSTEALABLE~ ~INV13~
  ADD_CRE_ITEM ~S!misc04~ #0 #0 #0 ~IDENTIFIED~ ~INV14~
  ADD_CRE_ITEM ~MISC29~ #0 #0 #0 ~UNSTEALABLE~ ~INV15~

COPY_EXISTING ~firkra02.cre~ ~override/firkra02.cre~
  WRITE_LONG  0x1c    9000 // gold
  WRITE_BYTE  0x55       3 // save vs wands
  WRITE_BYTE  0x58       4 // save vs spell
  WRITE_BYTE  0x5d      90 // resist magic
  WRITE_BYTE  0x60      55 // resist slashing
  WRITE_BYTE  0x61      55 // resist crushing
  WRITE_BYTE  0x62      55 // resist piercing
  WRITE_BYTE  0x63      80 // resist missile
  WRITE_BYTE  0x234     26 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~minhp1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!scrl21~ #0 #0 #0 ~UNSTEALABLE~ ~INV11~
  ADD_CRE_ITEM ~misc30~ #0 #0 #0 ~UNSTEALABLE~ ~INV12~
  ADD_CRE_ITEM ~S!misc03~ #0 #0 #0 ~IDENTIFIED~ ~INV13~
  ADD_CRE_ITEM ~ring02~ #0 #0 #0 ~UNSTEALABLE~ ~INV14~
  ADD_CRE_ITEM ~scrla4~ #0 #0 #0 ~UNSTEALABLE~ ~INV15~

COPY_EXISTING ~dragblac.cre~ ~override/dragblac.cre~
  WRITE_LONG  0x14   70000 // xp
  WRITE_LONG  0x1c   6000 // gold
  WRITE_SHORT 0x24     240 // current hp
  WRITE_SHORT 0x26     240 // max hp
  WRITE_BYTE  0x59     100 // resist fire
  WRITE_BYTE  0x5a     100 // resist cold
  WRITE_BYTE  0x5b     100 // resist electricity
  WRITE_BYTE  0x5d      70 // resist magic
  WRITE_BYTE  0x5e     100 // resist magic fire
  WRITE_BYTE  0x5f     100 // resist magic cold
  WRITE_BYTE  0x60      60 // resist slashing
  WRITE_BYTE  0x61      60 // resist crushing
  WRITE_BYTE  0x62      60 // resist piercing
  WRITE_BYTE  0x63     100 // resist missile
  WRITE_BYTE  0x234     30 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dblack~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~minhp1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!brchim~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~  
  ADD_CRE_ITEM ~S!misc02~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~S!scrl06~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~S!scrl27~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~

COPY_EXISTING ~fsdragon.cre~ ~override/fsdragon.cre~ //Ancient Dragon
  ADD_CRE_ITEM ~S!brchim~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~  
  
COPY_EXISTING ~dragblue.cre~ ~override/dragblue.cre~ //Abazigal
  ADD_CRE_ITEM ~S!brchim~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~  

COPY_EXISTING ~bazdra02.cre~ ~override/bazdra02.cre~ //Draconis
  ADD_CRE_ITEM ~S!brchim~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~  

COPY_EXISTING ~pwarden.cre~ ~override/pwarden.cre~
  WRITE_LONG  0x14   20000 // xp
  WRITE_LONG  0x1c    1000 // gold
  WRITE_SHORT 0x24     140 // current hp
  WRITE_SHORT 0x26     140 // max hp
  WRITE_SHORT 0x46  (0 - 1) // base ac
  WRITE_SHORT 0x48  (0 - 1) // effective ac
  WRITE_BYTE  0x52  (0 - 1) // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59     100 // resist fire
  WRITE_BYTE  0x5a     100 // resist cold
  WRITE_BYTE  0x5b     100 // resist electricity
  WRITE_BYTE  0x5c     100 // resist acid
  WRITE_BYTE  0x5d      80 // resist magic
  WRITE_BYTE  0x5e     100 // resist magic fire
  WRITE_BYTE  0x5f     100 // resist magic cold
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     22 // level
  WRITE_BYTE  0x235     20 // level secondary class
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     91 // strength % bonus
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!warden~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "sw1h35" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~scrl6m~ #8 // write new item
   END
END
  ADD_CRE_ITEM ~S!warden~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~sw1h35~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!drgrng~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~belt01~ #0 #0 #0 ~UNSTEALABLE~ ~INV15~
  ADD_CRE_ITEM ~S!misc02~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~scrl9m~ #0 #0 #0 ~UNSTEALABLE~ ~INV11~
  ADD_CRE_ITEM ~scrl5k~ #0 #0 #0 ~UNSTEALABLE~ ~INV12~
  ADD_CRE_ITEM ~scrl7q~ #0 #0 #0 ~UNSTEALABLE~ ~INV13~
  ADD_CRE_ITEM ~scrl7o~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM3~
  ADD_CRE_ITEM ~scrl8g~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~scrl6u~ #4 #0 #0 ~UNSTEALABLE~ ~QITEM2~

COPY_EXISTING ~pmaster.cre~ ~override/pmaster.cre~
  WRITE_SHORT 0x24     136 // current hp
  WRITE_SHORT 0x26     136 // max hp
  WRITE_BYTE  0x5b     100 // resist electricity
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "staf15" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~pairel01.cre~ ~override/pairel01.cre~
  WRITE_BYTE  0x5b     100 // resist electricity

COPY_EXISTING ~berinvar.cre~ ~override/berinvar.cre~
  ADD_CRE_ITEM ~potn08~ #0 #0 #0 ~NONE~ ~INV8~

COPY_EXISTING ~lavok02.cre~ ~override/lavok02.cre~
  ADD_CRE_ITEM ~S!misc05~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~scrl7j~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~S!amul04~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~scrl8l~ #0 #0 #0 ~UNSTEALABLE~ ~INV11~
  ADD_CRE_ITEM ~ring07~ #0 #0 #0 ~UNSTEALABLE~ ~INV12~
  ADD_CRE_ITEM ~S!misc01~ #0 #0 #0 ~UNSTEALABLE~ ~INV14~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "ring40" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00000010) // set Unstealable flag
   END
END

COPY_EXISTING ~lavok01.cre~ ~override/lavok01.cre~
  WRITE_BYTE  0x52      13 // thac0
  WRITE_BYTE  0x54       7 // save vs death
  WRITE_BYTE  0x5d     100 // resist magic
  WRITE_BYTE  0x60      60 // resist slashing
  WRITE_BYTE  0x61      60 // resist crushing
  WRITE_BYTE  0x62      60 // resist piercing
  WRITE_BYTE  0x63     100 // resist missile
  WRITE_BYTE  0x234     24 // level
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x258 ~~ #8      // removes race script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trapr~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~clck02~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~CLOAK~
  ADD_CRE_ITEM ~scrl6u~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~scrl7i~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  ADD_CRE_ITEM ~scrl7o~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM3~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~S!lavok~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~

COPY_EXISTING ~firmag01.cre~ ~override/firmag01.cre~
  WRITE_LONG  0x14   15000 // xp
  WRITE_LONG  0x1c     250 // gold
  WRITE_SHORT 0x24      94 // current hp
  WRITE_SHORT 0x26      94 // max hp
  WRITE_BYTE  0x52      14 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       4 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       7 // save vs breath
  WRITE_BYTE  0x58       4 // save vs spell
  WRITE_BYTE  0x59     100 // resist fire
  WRITE_BYTE  0x5e     100 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     21 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x240      2 // morale Break
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x250 ~S!firmag~ #8       // class script
  WRITE_ASCII 0x268 ~~ #8       // removes default script
  ADD_CRE_ITEM ~S!breath~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~clck01~ #0 #0 #0 ~UNSTEALABLE~ ~CLOAK~
  ADD_CRE_ITEM ~scrl9p~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  ADD_CRE_ITEM ~scrl8g~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM3~
  ADD_CRE_ITEM ~scrl6m~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~scrl6h~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~scrl9m~ #0 #0 #0 ~UNSTEALABLE~ ~INV11~
  ADD_CRE_ITEM ~S!misc06~ #0 #0 #0 ~UNSTEALABLE~ ~INV12~
  ADD_CRE_ITEM ~misc29~ #0 #0 #0 ~UNSTEALABLE~ ~INV13~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "staf01" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~staf18~ #8 // write new item
   END
END
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "key09" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00000010) // set Unstealable flag
   END
END

COPY_EXISTING ~draug.cre~ ~override/draug.cre~
  WRITE_LONG  0x14   12000 // xp
  WRITE_LONG  0x1c     300 // gold
  WRITE_BYTE  0x52       3 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x5d      40 // resist magic
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      60 // resist missile
  WRITE_BYTE  0x234     18 // level
  WRITE_ASCII 0x248 ~S!gall~ #8 // override script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!minhp1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~potn14~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~potn35~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  ADD_CRE_ITEM ~potn52~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM3~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "helm06" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~hllayen.cre~ ~override/hllayen.cre~
  WRITE_LONG  0x14   35000 // xp
  WRITE_SHORT 0x24      67 // current hp
  WRITE_SHORT 0x26      67 // max hp
  WRITE_BYTE  0x52      10 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       3 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       7 // save vs breath
  WRITE_BYTE  0x58       4 // save vs spell
  WRITE_BYTE  0x59      60 // resist fire
  WRITE_BYTE  0x5d      75 // resist magic
  WRITE_BYTE  0x5e      60 // resist magic fire
  WRITE_BYTE  0x60      60 // resist slashing
  WRITE_BYTE  0x61      60// resist crushing
  WRITE_BYTE  0x62      60 // resist piercing
  WRITE_BYTE  0x63     100 // resist missile
  WRITE_BYTE  0x234     31 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23d     16 // constitution
  WRITE_BYTE  0x23f     20 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!layene~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8       // removes class script
  WRITE_ASCII 0x268 ~~ #8       // removes default script
  WRITE_BYTE  0x272      1 // race
  ADD_CRE_ITEM ~S!castt~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~ARMOR~
  ADD_CRE_ITEM ~S!misc06~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~S!misc02~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~scrl9m~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~scrl7j~ #0 #0 #0 ~UNSTEALABLE~ ~INV11~
  ADD_CRE_ITEM ~S!scrl02~ #0 #0 #0 ~UNSTEALABLE~ ~INV12~
  ADD_CRE_ITEM ~brac18~ #0 #0 #0 ~UNSTEALABLE~ ~INV13~
  ADD_CRE_ITEM ~misc44~ #0 #0 #0 ~UNSTEALABLE~ ~INV14~
  ADD_CRE_ITEM ~helm26~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~S!layene~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~scrl7i~ #4 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~scrl9p~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  ADD_CRE_ITEM ~scrl9p~ #4 #0 #0 ~UNSTEALABLE~ ~QITEM3~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~

COPY_EXISTING ~scsarles.cre~ ~override/scsarles.cre~
  ADD_CRE_ITEM ~potn08~ #0 #0 #0 ~NONE~ ~INV8~

COPY_EXISTING ~hlsion.cre~ ~override/hlsion.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_SHORT 0x24      65 // current hp
  WRITE_SHORT 0x26      65 // max hp
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5d     100 // resist magic
  WRITE_BYTE  0x5e      75 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x52      13 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       3 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       7 // save vs breath
  WRITE_BYTE  0x58       4 // save vs spell
  WRITE_BYTE  0x234     22 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~~ #8 // removes override script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~scrl8l~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~scrl5k~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~S!scrl09~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~scrl9p~ #4 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~scrl9u~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  ADD_CRE_ITEM ~scrl9m~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM3~
  ADD_CRE_ITEM ~S!sion~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~staf18~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~ TWOHANDED
  ADD_CRE_ITEM ~scrlb1~ #1 #0 #0 ~UNSTEALABLE~ ~INV7~

COPY_EXISTING ~rock.cre~ ~override/rock.cre~
  WRITE_LONG  0x14   25000 // xp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x5d      60 // resist magic
  WRITE_BYTE  0x60      60 // resist slashing
  WRITE_BYTE  0x61      60 // resist crushing
  WRITE_BYTE  0x62      60 // resist piercing
  WRITE_BYTE  0x63     100 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~misc30~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~S!rock~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~miscai~ #0 #0 #0 ~UNSTEALABLE~ ~BOOTS~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~

COPY_EXISTING ~garock.cre~ ~override/garock.cre~
  WRITE_LONG  0x14   20000 // xp
  WRITE_BYTE  0x52       2 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x5d      40 // resist magic
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     19 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~misc6z~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~S!rock~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~gromg05.cre~ ~override/gromg05.cre~
  WRITE_LONG  0x14   24000 // xp
  WRITE_LONG  0x1c    100 // gold
  WRITE_SHORT 0x24      69 // current hp
  WRITE_SHORT 0x26      69 // max hp
  WRITE_BYTE  0x52      11 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       3 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       7 // save vs breath
  WRITE_BYTE  0x58       4 // save vs spell
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     28 // level
  WRITE_BYTE  0x238     16 // strength
  WRITE_BYTE  0x23a     18 // intelligence
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~S!gromag~ #8       // class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!pasha2~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~immune1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~clck01~ #0 #0 #0 ~UNSTEALABLE~ ~CLOAK~
  ADD_CRE_ITEM ~clck14~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~ARMOR~
  ADD_CRE_ITEM ~potn55~ #3 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~scrl6u~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  ADD_CRE_ITEM ~scrl7i~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM3~
  ADD_CRE_ITEM ~bull06~ #20 #0 #0 ~UNSTEALABLE~ ~QUIVER1~
  ADD_CRE_ITEM ~slng04~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON2~
  ADD_CRE_ITEM ~scrl9d~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~scrl5i~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~scrl1j~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~

COPY_EXISTING ~gromg13.cre~ ~override/gromg13.cre~
  WRITE_SHORT 0x24      68 // current hp
  WRITE_SHORT 0x26      68 // max hp
  WRITE_BYTE  0x52      12 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       3 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       7 // save vs breath
  WRITE_BYTE  0x58       4 // save vs spell
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     25 // level
  WRITE_BYTE  0x238     16 // strength
  WRITE_BYTE  0x23a     18 // intelligence
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "clck14" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~clck01~ #8 // write new item
   END
END

COPY_EXISTING ~fsmage04.cre~ ~override/fsmage04.cre~
  WRITE_LONG  0x14   20000 // xp
  WRITE_SHORT 0x24      68 // current hp
  WRITE_SHORT 0x26      68 // max hp
  WRITE_BYTE  0x52      12 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       3 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       7 // save vs breath
  WRITE_BYTE  0x58       4 // save vs spell
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     25 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23a     18 // intelligence
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~staf18~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~ TWOHANDED

COPY_EXISTING ~fsmage03.cre~ ~override/fsmage03.cre~
  WRITE_LONG  0x14   15000 // xp
  WRITE_SHORT 0x24      63 // current hp
  WRITE_SHORT 0x26      63 // max hp
  WRITE_BYTE  0x52      14 // thac0
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~staf18~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~ TWOHANDED

COPY_EXISTING ~fsmage02.cre~ ~override/fsmage02.cre~
  WRITE_LONG  0x14    8000 // xp
  WRITE_SHORT 0x24      61 // current hp
  WRITE_SHORT 0x26      61 // max hp
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~staf02~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~ TWOHANDED

COPY_EXISTING ~sargrd06.cre~ ~override/sargrd06.cre~
  WRITE_LONG  0x14   15000 // xp
  WRITE_SHORT 0x24      68 // current hp
  WRITE_SHORT 0x26      68 // max hp
  WRITE_BYTE  0x52      12 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       3 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       7 // save vs breath
  WRITE_BYTE  0x58       4 // save vs spell
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     25 // level
  WRITE_BYTE  0x238     16 // strength
  WRITE_BYTE  0x23a     18 // intelligence
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~staf18~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~ TWOHANDED

COPY_EXISTING ~teltief1.cre~ ~override/teltief1.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_SHORT 0x24     136 // current hp
  WRITE_SHORT 0x26     136 // max hp
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x268 ~S!ransm2~ #8      // default script
  ADD_CRE_ITEM ~S!teltie~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~potn35~ #1 #0 #0 ~UNSTEALABLE~ ~QITEM3~

COPY_EXISTING ~teltief2.cre~ ~override/teltief2.cre~
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       4 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57      11 // save vs breath
  WRITE_BYTE  0x58       5 // save vs spell
  WRITE_BYTE  0x60      75 // resist slashing
  WRITE_BYTE  0x61      75 // resist crushing
  WRITE_BYTE  0x62      75 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     23 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x268 ~TELTIEF2~ #8      // default script
  ADD_CRE_ITEM ~S!teltie~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~minhp1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~potn35~ #1 #0 #0 ~UNSTEALABLE~ ~QITEM3~

COPY_EXISTING ~haegan.cre~ ~override/haegan.cre~
  WRITE_LONG  0x14   12000 // xp
  WRITE_LONG  0x1c    1000 // gold
  WRITE_SHORT 0x24     100 // current hp
  WRITE_SHORT 0x26     100 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     16 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     51 // strength % bonus
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     20 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x258 ~~ #8      // removes race script
  ADD_CRE_ITEM ~S!haegan~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!misc35~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~S!misc40~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~S!helm09~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~potn55~ #3 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "sw2h01" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~sw1h41~ #8 // write new item
   END
END

COPY_EXISTING ~slguard1.cre~ ~override/slgurad1.cre~
  WRITE_LONG  0x14     840 // xp
  WRITE_LONG  0x1c      28 // gold
  WRITE_SHORT 0x24      63 // current hp
  WRITE_SHORT 0x26      63 // max hp
  WRITE_BYTE  0x52      12 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234      9 // level
  WRITE_ASCII 0x250 ~S!sl0405~ #8       // class script

COPY_EXISTING ~slguard2.cre~ ~override/slguard2.cre~
  WRITE_LONG  0x14     840 // xp
  WRITE_LONG  0x1c      28 // gold
  WRITE_SHORT 0x24      72 // current hp
  WRITE_SHORT 0x26      72 // max hp
  WRITE_BYTE  0x52      12 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234      9 // level
  WRITE_ASCII 0x250 ~S!sl0405~ #8       // class script

COPY_EXISTING ~slarch1.cre~ ~override/slarch1.cre~
  WRITE_LONG  0x14     840 // xp
  WRITE_LONG  0x1c      42 // gold
  WRITE_SHORT 0x24      63 // current hp
  WRITE_SHORT 0x26      63 // max hp
  WRITE_BYTE  0x52      12 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234      9 // level
  WRITE_ASCII 0x250 ~S!sl0405~ #8       // class script
  WRITE_BYTE  0x273     0x2 // class fighter

COPY_EXISTING ~slmage1.cre~ ~override/slmage1.cre~
  WRITE_LONG  0x14    4800 // xp
  WRITE_LONG  0x1c      51 // gold
  WRITE_SHORT 0x24      61 // current hp
  WRITE_SHORT 0x26      61 // max hp
  WRITE_BYTE  0x52      16 // thac0
  WRITE_BYTE  0x54      11 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57      11 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x60      60 // resist slashing
  WRITE_BYTE  0x61      60 // resist crushing
  WRITE_BYTE  0x62      60 // resist piercing
  WRITE_BYTE  0x63      60 // resist missile
  WRITE_BYTE  0x234     14 // level
  WRITE_BYTE  0x238     16 // strength
  WRITE_BYTE  0x23a     18 // intelligence
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!slmage~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8       // removes class script
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~ring06~ #0 #0 #0 ~UNSTEALABLE~ ~RRING~
  ADD_CRE_ITEM ~surehp1~ #0 #0 #0 ~UNSTEALABLE~ ~LRING~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~helm20~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~clck11~ #0 #0 #0 ~UNSTEALABLE~ ~ARMOR~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~scrl7q~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~scrl5h~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM2~

COPY_EXISTING ~obsdem01.cre~ ~override/obsdem01.cre~
  WRITE_LONG  0x14   16000 // xp
  WRITE_SHORT 0x24     160 // current hp
  WRITE_SHORT 0x26     160 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x5d      75 // resist magic
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!misc30~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~S!scrl05~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~S!drgrng~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "S1-10" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!obsdem~ #8 // write new item
   END
END

COPY_EXISTING ~obsdem04.cre~ ~override/obsdem04.cre~
  WRITE_LONG  0x14     7500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~S!antic3~ #8     // class script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~obshal03.cre~ ~override/obshal03.cre~
  WRITE_LONG  0x14   10000 // xp
  WRITE_LONG  0x1c     500 // gold
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  ADD_CRE_ITEM ~scrl6m~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~

COPY_EXISTING ~kaypal01.cre~ ~override/kaypal01.cre~
  WRITE_LONG  0x14   10000 // xp
  WRITE_LONG  0x1c    1000 // gold
  WRITE_BYTE  0x5d      90 // resist magic
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~misc30~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~amul12~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~pirmur01.cre~ ~override/pirmur01.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_LONG  0x1c     500 // gold
  WRITE_SHORT 0x24     119 // current hp
  WRITE_SHORT 0x26     119 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x5d      70 // resist magic
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~ring06~ #0 #0 #0 ~UNSTEALABLE~ ~LRING~
  ADD_CRE_ITEM ~shld04~ #0 #0 #0 ~UNSTEALABLE~ ~SHIELD~
  ADD_CRE_ITEM ~helm06~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!minhp1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~amul05~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~misc26~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~misc36~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~misc30~ #0 #0 #0 ~UNSTEALABLE~ ~INV11~
  ADD_CRE_ITEM ~potn55~ #3 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~potn35~ #1 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "leat12" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~plat04~ #8 // write new item
   END
END

COPY_EXISTING ~pirmur07.cre~ ~override/pirmur07.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_LONG  0x1c     250 // gold
  WRITE_SHORT 0x24      65 // current hp
  WRITE_SHORT 0x26      65 // max hp
  WRITE_BYTE  0x52      13 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       3 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       7 // save vs breath
  WRITE_BYTE  0x58       4 // save vs spell
  WRITE_BYTE  0x5d      70 // resist magic
  WRITE_BYTE  0x60      60 // resist slashing
  WRITE_BYTE  0x61      60 // resist crushing
  WRITE_BYTE  0x62      60 // resist piercing
  WRITE_BYTE  0x63      60 // resist missile
  WRITE_BYTE  0x234     22 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!vadek~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8       // removes class script
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  ADD_CRE_ITEM ~S!castt~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~ARMOR~
  ADD_CRE_ITEM ~scrl5t~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~surehp1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~scrl9p~ #4 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~scrl9u~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM2~

COPY_EXISTING ~tazok.cre~ ~override/tazok.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_LONG  0x1c    4900 // gold
  WRITE_SHORT 0x24     142 // current hp
  WRITE_SHORT 0x26     142 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!tazok~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~helm04~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~S!tazok~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!minhp1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~potn55~ #2 #0 #0 ~NONE~ ~QITEM1~
  ADD_CRE_ITEM ~potn35~ #0 #0 #0 ~NONE~ ~QITEM3~
  ADD_CRE_ITEM ~misc39~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~misc42~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~misc35~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~uhrang01.cre~ ~override/uhrang01.cre~
  WRITE_LONG  0x1c    4444 // gold
  ADD_CRE_ITEM ~misc33~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~misc16~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~misc30~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~S!scrl09~ #0 #0 #0 ~UNSTEALABLE~ ~INV11~
  ADD_CRE_ITEM ~misc43~ #0 #0 #0 ~UNSTEALABLE~ ~INV12~
  ADD_CRE_ITEM ~misc26~ #0 #0 #0 ~UNSTEALABLE~ ~INV13~
  ADD_CRE_ITEM ~misc41~ #0 #0 #0 ~UNSTEALABLE~ ~INV14~
  ADD_CRE_ITEM ~S!misc06~ #0 #0 #0 ~UNSTEALABLE~ ~INV15~

COPY_EXISTING ~rngsha02.cre~ ~override/rngsha02.cre~
  WRITE_LONG  0x14   11500 // xp
  WRITE_SHORT 0x24     114 // current hp
  WRITE_SHORT 0x26     114 // max hp
  WRITE_BYTE  0x52       4 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5d      90 // resist magic
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23b     18 // wisdom
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23d     18 // constitution
  WRITE_ASCII 0x248 ~S!rngsha~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8      // removes class script
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!patric~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "ring95" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!drgrng~ #8 // write new item
   END
END

COPY_EXISTING ~obshal05.cre~ ~override/obshal05.cre~
  WRITE_LONG  0x14   13500 // xp
  WRITE_LONG  0x1c      50 // gold
  WRITE_SHORT 0x24      62 // current hp
  WRITE_SHORT 0x26      62 // max hp
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e      75 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!kayard~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8      // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~ring18~ #0 #0 #0 ~UNSTEALABLE~ ~RRING~
  ADD_CRE_ITEM ~ring06~ #0 #0 #0 ~UNSTEALABLE~ ~LRING~
  ADD_CRE_ITEM ~staf02~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~ TWOHANDED
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~misc43~ #0 #0 #0 ~UNSTEALABLE~ ~INV7~
  ADD_CRE_ITEM ~scrl6h~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~scrl7p~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~scrl9c~ #3 #0 #0 ~UNSTEALABLE~ ~QITEM2~

COPY_EXISTING ~obshal06.cre~ ~override/obshal06.cre~
  WRITE_LONG  0x14   13000 // xp
  WRITE_SHORT 0x24      88 // current hp
  WRITE_SHORT 0x26      88 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e      75 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x235     13 // level secondary class
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~S!equip~ #8       // class script
  WRITE_ASCII 0x258 ~mage12d~ #8      // removes race script
  WRITE_BYTE  0x273     0x7 // class fighter mage
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~dagg02~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~

COPY_EXISTING ~tolger2.cre~ ~override/tolger2.cre~
  WRITE_LONG  0x14   20000 // xp
  WRITE_BYTE  0x52      13 // thac0
  WRITE_BYTE  0x5d     100 // resist magic
  WRITE_BYTE  0x60      25 // resist slashing
  WRITE_BYTE  0x61      25 // resist crushing
  WRITE_BYTE  0x62      25 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     22 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!tolger~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8      // removes class script
  WRITE_ASCII 0x258 ~~ #8      // removes race script
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  WRITE_BYTE  0x27b     0x13 // alignment
  ADD_CRE_ITEM ~scrl7l~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~scrl9a~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~scrl7j~ #0 #0 #0 ~UNSTEALABLE~ ~INV12~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~scrl7o~ #4 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  ADD_CRE_ITEM ~scrl6u~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM3~

COPY_EXISTING ~tolmag02.cre~ ~override/tolmag02.cre~
  WRITE_LONG  0x14   10000 // xp
  WRITE_SHORT 0x24      61 // current hp
  WRITE_SHORT 0x26      61 // max hp
  WRITE_BYTE  0x52      15 // thac0
  WRITE_BYTE  0x54      11 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57      11 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     14 // level
  WRITE_ASCII 0x248 ~S!tolmag~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8      // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~scrl6m~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~scrl6y~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~hlkoshi.cre~ ~override/hlkoshi.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_SHORT 0x24     104 // current hp
  WRITE_SHORT 0x26     104 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5b      50 // resist electricity
  WRITE_BYTE  0x5d      40 // resist magic
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     93 // strength % bonus
  WRITE_ASCII 0x248 ~S!koshi~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8      // removes class script
  WRITE_ASCII 0x258 ~~ #8      // removes race script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~helm26~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~potn55~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~S!koshi~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~misc43~ #0 #0 #0 ~UNSTEALABLE~ ~INV5~
  ADD_CRE_ITEM ~misc42~ #0 #0 #0 ~UNSTEALABLE~ ~INV6~
  ADD_CRE_ITEM ~misc26~ #0 #0 #0 ~UNSTEALABLE~ ~INV7~

COPY_EXISTING ~hlolaf.cre~ ~override/hlolaf.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_SHORT 0x24     125 // current hp
  WRITE_SHORT 0x26     125 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5d     100 // resist magic
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!olaf~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8      // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~potn55~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  LPF ~SET_CRE_ITEM_FLAGS~ STR_VAR
    item_to_change = ~helm06~
    flags = ~UNSTEALABLE~
  END

COPY_EXISTING ~hlmafer.cre~ ~override/hlmafer.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_SHORT 0x24     125 // current hp
  WRITE_SHORT 0x26     125 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5d      40 // resist magic
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!mafer~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8      // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script

  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~minhp1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~potn55~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM1~

  REPLACE_CRE_ITEM ~ax1h16~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~
  REPLACE_CRE_ITEM ~potn35~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM3~
  REPLACE_CRE_ITEM ~helm04~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~

COPY_EXISTING ~sahpr2.cre~ ~override/sahpr2.cre~
  WRITE_LONG  0x14   17500 // xp
  WRITE_LONG  0x1c    1000 // gold
  WRITE_SHORT 0x24     160 // current hp
  WRITE_SHORT 0x26     160 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5a     100 // resist cold
  WRITE_BYTE  0x5b     100 // resist electricity
  WRITE_BYTE  0x5c     100 // resist acid
  WRITE_BYTE  0x5d      60 // resist magic
  WRITE_BYTE  0x5e      75 // resist magic fire
  WRITE_BYTE  0x60      75 // resist slashing
  WRITE_BYTE  0x61      75 // resist crushing
  WRITE_BYTE  0x62      75 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  WRITE_ASCII 0x268 ~S!villyn~ #8      // default script
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!minhp2~ #0 #0 #0 ~UNSTEALABLE~ ~BOOTS~
  ADD_CRE_ITEM ~S!seeinv~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!scrl23~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "sper08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "halb09b" = 0)) BEGIN
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00000010) // set Unstealable flag
  END
END

COPY_EXISTING ~hlfight.cre~ ~override/hlfight.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_LONG  0x1c     250 // gold
  WRITE_SHORT 0x24     127 // current hp
  WRITE_SHORT 0x26     127 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x5d      40 // resist magic
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~S!hlfigh~ #8       // class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~blun13~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~
  ADD_CRE_ITEM ~helm06~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~potn55~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "chan01" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~plat04~ #8 // write new item
   END
END

COPY_EXISTING ~hlassa.cre~ ~override/hlassa.cre~
  WRITE_LONG  0x14   21000 // xp
  WRITE_LONG  0x1c    1000 // gold
  WRITE_SHORT 0x24      92 // current hp
  WRITE_SHORT 0x26      92 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       4 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57      11 // save vs breath
  WRITE_BYTE  0x58       5 // save vs spell
  WRITE_BYTE  0x5d      75 // resist magic
  WRITE_BYTE  0x60      75 // resist slashing
  WRITE_BYTE  0x61      75 // resist crushing
  WRITE_BYTE  0x62      75 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     25 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!hlassa~ #8 // override script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!hlassa~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~dagg14~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~
  ADD_CRE_ITEM ~shld17~ #0 #0 #0 ~UNSTEALABLE~ ~SHIELD~
  ADD_CRE_ITEM ~misc45~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~potn10~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "leat04" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~leat12~ #8 // write new item
   END
END

COPY_EXISTING ~pirpir05.cre~ ~override/pirpir05.cre~
  WRITE_LONG  0x14    3300 // xp
  WRITE_BYTE  0x52      16 // thac0
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x55       8 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57      13 // save vs breath
  WRITE_BYTE  0x58       9 // save vs spell
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x238     16 // strength
  WRITE_BYTE  0x23c     18 // dexterity

COPY_EXISTING ~legdor.cre~ ~override/legdor.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_LONG  0x1c    1500 // gold
  WRITE_SHORT 0x24     106 // current hp
  WRITE_SHORT 0x26     106 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x54       2 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       8 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x59     100 // resist fire
  WRITE_BYTE  0x5b      50 // resist electricity
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e     100 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23b     18 // wisdom
  WRITE_BYTE  0x23c     17 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!legdor~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8       // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  WRITE_BYTE  0x27b     0x33 // alignment
  ADD_CRE_ITEM ~blun13~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~
  ADD_CRE_ITEM ~helmnoan~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~shld29~ #0 #0 #0 ~UNSTEALABLE~ ~SHIELD~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trapr~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~S!drgrng~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~clck01~ #0 #0 #0 ~UNSTEALABLE~ ~CLOAK~
  ADD_CRE_ITEM ~misc26~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~misc30~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~misc21~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~BHAALHP1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "plat01" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~plat04~ #8 // write new item
   END
END

COPY_EXISTING ~deshar.cre~ ~override/deshar.cre~
  WRITE_LONG  0x14   22000 // xp
  WRITE_LONG  0x1c    2500 // gold
  WRITE_SHORT 0x24     122 // current hp
  WRITE_SHORT 0x26     122 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       5 // save vs spell
  WRITE_BYTE  0x59     100 // resist fire
  WRITE_BYTE  0x5b      40 // resist electricity
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e     100 // resist magic fire
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x235     23 // level secondary class
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!deshar~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8       // removes class script
  WRITE_ASCII 0x258 ~~ #8       // removes race script
  ADD_CRE_ITEM ~S!sw21~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~
  ADD_CRE_ITEM ~clck30~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~CLOAK~
  ADD_CRE_ITEM ~helmnoan~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~S!deshar~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~potn10~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~potn55~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM3~
  ADD_CRE_ITEM ~misc45~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~misc43~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!minhp1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~

COPY_EXISTING ~gorbat1.cre~ ~override/gorbat1.cre~
  WRITE_BYTE  0x5d      75 // resist magic
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  ADD_CRE_ITEM ~misc43~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~gortan1.cre~ ~override/gortan1.cre~
  WRITE_BYTE  0x5d      75 // resist magic
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  ADD_CRE_ITEM ~misc42~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~ccguard1.cre~ ~override/ccguard1.cre~
  WRITE_LONG  0x14    2000 // xp
  WRITE_LONG  0x1c      40 // gold
  WRITE_SHORT 0x24      66 // current hp
  WRITE_SHORT 0x26      66 // max hp
  WRITE_BYTE  0x52      11 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234     10 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     16 // dexterity
  ADD_CRE_ITEM ~S!ring09~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~

COPY_EXISTING ~gppri1.cre~ ~override/gppri1.cre~
  WRITE_LONG  0x14   10000 // xp
  WRITE_LONG  0x1c      60 // gold
  WRITE_SHORT 0x24      88 // current hp
  WRITE_SHORT 0x26      88 // max hp
  WRITE_BYTE  0x52      10 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       8 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57      10 // save vs breath
  WRITE_BYTE  0x58       9 // save vs spell
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x23b     18 // wisdom
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23d     16 // constitution
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x248 ~S!chandr~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  WRITE_BYTE  0x27b     0x33 // alignment
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~bdturm01.cre~ ~override/bdturm01.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_LONG  0x1c     500 // gold
  WRITE_SHORT 0x24     153 // current hp
  WRITE_SHORT 0x26     153 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      65 // resist slashing
  WRITE_BYTE  0x61      65 // resist crushing
  WRITE_BYTE  0x62      65 // resist piercing
  WRITE_BYTE  0x63      65 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     51 // strength % bonus
  WRITE_BYTE  0x23c     17 // dexterity
  WRITE_BYTE  0x23d     15 // constitution
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!turm01~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~ring06~ #0 #0 #0 ~UNSTEALABLE~ ~RRING~
  ADD_CRE_ITEM ~S!guard~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~boot01~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~potn55~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~S!misc06~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~misc21~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~misc26~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~misc43~ #0 #0 #0 ~UNSTEALABLE~ ~INV11~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "sw2h02" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~SW2H11~ #8 // write new item
   END
END

COPY_EXISTING ~bdturm03.cre~ ~override/bdturm03.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_LONG  0x1c      50 // gold
  WRITE_SHORT 0x24      64 // current hp
  WRITE_SHORT 0x26      64 // max hp
  WRITE_BYTE  0x52      13 // thac0
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!turm03~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~ring06~ #0 #0 #0 ~UNSTEALABLE~ ~RRING~
  ADD_CRE_ITEM ~scrl9m~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~scrl5i~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~scrl9p~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~scrl8q~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  ADD_CRE_ITEM ~scrl6u~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM3~

COPY_EXISTING ~bodfgt03.cre~ ~override/bodfgt03.cre~
  WRITE_LONG  0x14    7000 // xp
  WRITE_LONG  0x1c    5000 // gold
  WRITE_SHORT 0x24     130 // current hp
  WRITE_SHORT 0x26     130 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!gracen~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~potn55~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~potn35~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM3~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!minhp1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~misc42~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "plat01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "sw2h11" = 0) OR
             ("%item%" STRING_COMPARE_CASE "potn52" = 0) OR
             ("%item%" STRING_COMPARE_CASE "helm01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "misc7c" = 0)) BEGIN
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00000010) // set Unstealable flag
  END
END

COPY_EXISTING ~jatermin.cre~ ~override/jatermin.cre~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "clck16" = 0) OR
             ("%item%" STRING_COMPARE_CASE "ring07" = 0) OR
             ("%item%" STRING_COMPARE_CASE "amul14" = 0) OR
             ("%item%" STRING_COMPARE_CASE "ring31" = 0) OR
             ("%item%" STRING_COMPARE_CASE "clck02" = 0)) BEGIN
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flag
  END
END

COPY_EXISTING ~yaga01.cre~ ~override/yaga01.cre~
  WRITE_LONG  0x14   45000 // xp
  WRITE_LONG  0x1c    9000 // gold
  WRITE_SHORT 0x24     340 // current hp
  WRITE_SHORT 0x26     340 // max hp
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x5a      75 // resist cold
  WRITE_BYTE  0x5b      75 // resist electricity
  WRITE_BYTE  0x5c      75 // resist acid
  WRITE_BYTE  0x5d      90 // resist magic
  WRITE_BYTE  0x60      90 // resist slashing
  WRITE_BYTE  0x61      95 // resist crushing
  WRITE_BYTE  0x62      90 // resist piercing
  WRITE_BYTE  0x63     100 // resist missile
  WRITE_BYTE  0x234     30 // level
  WRITE_BYTE  0x23f     20 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!yaga~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~shld32~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~SHIELD~
  ADD_CRE_ITEM ~S!yaga~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~potn55~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  ADD_CRE_ITEM ~potn33~ #3 #0 #0 ~UNSTEALABLE~ ~INV7~
  ADD_CRE_ITEM ~S!misc02~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~misc38~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~misc43~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~misc41~ #0 #0 #0 ~UNSTEALABLE~ ~INV11~
  ADD_CRE_ITEM ~misc42~ #0 #0 #0 ~UNSTEALABLE~ ~INV12~
  ADD_CRE_ITEM ~misc45~ #0 #0 #0 ~UNSTEALABLE~ ~INV13~
  ADD_CRE_ITEM ~misc35~ #0 #0 #0 ~UNSTEALABLE~ ~INV14~
  ADD_CRE_ITEM ~misc44~ #0 #0 #0 ~UNSTEALABLE~ ~INV15~

COPY_EXISTING ~yaga03.cre~ ~override/yaga03.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_LONG  0x1c     250 // gold
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5b      50 // resist electricity
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x240      2 // morale Break
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x268 ~S!yaga03~ #8      // default script
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!drgrng~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~potn07~ #2 #0 #0 ~NONE~ ~QITEM2~

COPY_EXISTING ~yaga04.cre~ ~override/yaga04.cre~
  WRITE_LONG  0x14   14000 // xp
  WRITE_BYTE  0x60      25 // resist slashing
  WRITE_BYTE  0x61      25 // resist crushing
  WRITE_BYTE  0x62      25 // resist piercing
  WRITE_BYTE  0x63      25 // resist missile
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23b     18 // wisdom
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x242      2 // morale Recovery
  ADD_CRE_ITEM ~shld29~ #0 #0 #0 ~UNSTEALABLE~ ~SHIELD~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~misc30~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~misc33~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~

COPY_EXISTING ~elemimix.cre~ ~override/elemimix.cre~
  WRITE_LONG  0x14   25000 // xp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x5d     100 // resist magic
  WRITE_BYTE  0x60      75 // resist slashing
  WRITE_BYTE  0x61      75 // resist crushing
  WRITE_BYTE  0x62      75 // resist piercing
  WRITE_BYTE  0x63     100 // resist missile
  WRITE_BYTE  0x234     29 // level
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!imix~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~sarevimm~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~misc16~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~ring18~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~

COPY_EXISTING ~amtcap01.cre~ ~override/amtcap01.cre~
  WRITE_LONG  0x14   21900 // xp
  WRITE_LONG  0x1c     500 // gold
  WRITE_SHORT 0x24     114 // current hp
  WRITE_SHORT 0x26     114 // max hp
  WRITE_BYTE  0x52  (0 - 1) // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5b      40 // resist electricity
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e      75 // resist magic fire
  WRITE_BYTE  0x5f      50 // resist magic cold
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     22 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~~ #8 // removes override script
  WRITE_ASCII 0x250 ~S!amtcap~ #8         // class script
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!amtcap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~potn21~ #2 #0 #0 ~NONE~ ~QITEM3~
  ADD_CRE_ITEM ~shld30~ #0 #0 #0 ~UNSTEALABLE~ ~SHIELD~
  ADD_CRE_ITEM ~clck26~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~CLOAK~
  ADD_CRE_ITEM ~misc20~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~misc21~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~misc26~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~

COPY_EXISTING ~amtpik01.cre~ ~override/amtpik01.cre~
  WRITE_LONG  0x14   15000 // xp
  WRITE_LONG  0x1c     100 // gold
  WRITE_SHORT 0x24     108 // current hp
  WRITE_SHORT 0x26     108 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x23f     17 // morale
  ADD_CRE_ITEM ~S!ring09~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~potn05~ #0 #0 #0 ~NONE~ ~QITEM2~
  ADD_CRE_ITEM ~potn55~ #4 #0 #0 ~NONE~ ~QITEM3~
  ADD_CRE_ITEM ~helm08~ #0 #0 #0 ~UNSTEALABLE~ ~HELMET~
  ADD_CRE_ITEM ~clck26~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~CLOAK~

COPY_EXISTING ~plmetr01.cre~ ~override/plmetr01.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_LONG  0x1c     200 // gold
  WRITE_SHORT 0x24     112 // current hp
  WRITE_SHORT 0x26     112 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!plmetr~ #8 // override script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!ring09~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~sw1h41~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~
  ADD_CRE_ITEM ~potn55~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~potn52~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  ADD_CRE_ITEM ~potn21~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM3~
  ADD_CRE_ITEM ~shld30~ #0 #0 #0 ~UNSTEALABLE~ ~SHIELD~
  ADD_CRE_ITEM ~clck26~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~CLOAK~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~helm26~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~

COPY_EXISTING ~plmetw01.cre~ ~override/plmetw01.cre~
  WRITE_LONG  0x14   20000 // xp
  WRITE_LONG  0x1c      50 // gold
  WRITE_SHORT 0x24      61 // current hp
  WRITE_SHORT 0x26      61 // max hp
  WRITE_BYTE  0x52      13 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       3 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       7 // save vs breath
  WRITE_BYTE  0x58       4 // save vs spell
  WRITE_BYTE  0x59     100 // resist fire
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e     100 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     22 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x240      2 // morale Break
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x250 ~S!kaol~ #8       // class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~staf18~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~ TWOHANDED
  ADD_CRE_ITEM ~S!castt~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~ARMOR~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~scrl7o~ #4 #0 #0 ~UNSTEALABLE~ ~QITEM2~

COPY_EXISTING ~plmetg01.cre~ ~override/plmetg01.cre~
  WRITE_LONG  0x14    6800 // xp
  WRITE_SHORT 0x24     105 // current hp
  WRITE_SHORT 0x26     105 // max hp
  WRITE_BYTE  0x52       7 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     14 // level
  WRITE_BYTE  0x23f     15 // morale
  ADD_CRE_ITEM ~S!ring09~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~

COPY_EXISTING ~plmetg02.cre~ ~override/plmetg02.cre~
  WRITE_LONG  0x14    6800 // xp
  WRITE_SHORT 0x24     101 // current hp
  WRITE_SHORT 0x26     101 // max hp
  WRITE_BYTE  0x52       7 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     14 // level
  WRITE_BYTE  0x23f     15 // morale
  ADD_CRE_ITEM ~S!ring09~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~

COPY_EXISTING ~golbon01.cre~ ~override/golbon01.cre~
  WRITE_BYTE  0x5a     100 // resist cold
  WRITE_BYTE  0x5d      90 // resist magic
  WRITE_BYTE  0x5f      50 // resist magic cold
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell

COPY_EXISTING ~gpskel1.cre~ ~override/gpskel1.cre~
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile

COPY_EXISTING ~hgskl01.cre~ ~override/hgskl01.cre~
  WRITE_LONG  0x14   15000 // xp
  WRITE_BYTE  0x5d      90 // resist magic
  WRITE_BYTE  0x23f     16 // morale

COPY_EXISTING ~hgskl02.cre~ ~override/hgskl02.cre~
  WRITE_LONG  0x14    9000 // xp
  WRITE_BYTE  0x52      13 // thac0
  WRITE_BYTE  0x5d      90 // resist magic
  WRITE_BYTE  0x23f     16 // morale

COPY_EXISTING ~hgskl03.cre~ ~override/hgskl03.cre~
  WRITE_LONG  0x14   15000 // xp
  WRITE_BYTE  0x52      16 // thac0
  WRITE_BYTE  0x23f     16 // morale
  WRITE_ASCII 0x268 ~cmage20a~ #8      // default script

COPY_EXISTING ~hgskl04.cre~ ~override/hgskl04.cre~
  WRITE_LONG  0x14   20000 // xp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell

COPY_EXISTING ~uddoor07.cre~ ~override/uddoor07.cre~
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile

COPY_EXISTING ~ddguard7.cre~ ~override/ddguard7.cre~
  WRITE_SHORT 0x24     132 // current hp
  WRITE_SHORT 0x26     132 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     16 // level
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!tombgu~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!seeinv~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~ddguard1.cre~ ~override/ddguard1.cre~
  WRITE_LONG  0x14   12000 // xp
  WRITE_SHORT 0x24     111 // current hp
  WRITE_SHORT 0x26     111 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x53       2 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     16 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~INITRG15~ #8 // override script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!tombgu~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!seeinv~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~potn12~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~

COPY_EXISTING ~ddguard2.cre~ ~override/ddguard2.cre~
  WRITE_LONG  0x14   12000 // xp
  WRITE_SHORT 0x24     111 // current hp
  WRITE_SHORT 0x26     111 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x53       2 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     16 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~INITRG15~ #8 // override script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!tombgu~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!seeinv~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~potn11~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~

COPY_EXISTING ~ddguard3.cre~ ~override/ddguard3.cre~
  WRITE_LONG  0x14   12000 // xp
  WRITE_SHORT 0x24     111 // current hp
  WRITE_SHORT 0x26     111 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x53       2 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     16 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~INITRG15~ #8 // override script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!tombgu~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!seeinv~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~potn02~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~

COPY_EXISTING ~ddguard4.cre~ ~override/ddguard4.cre~
  WRITE_LONG  0x14   12000 // xp
  WRITE_SHORT 0x24     111 // current hp
  WRITE_SHORT 0x26     111 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x53       2 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     16 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~INITRG15~ #8 // override script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!tombgu~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!seeinv~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~potn35~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~

COPY_EXISTING ~ddguard5.cre~ ~override/ddguard5.cre~
  WRITE_LONG  0x14   12000 // xp
  WRITE_SHORT 0x24     111 // current hp
  WRITE_SHORT 0x26     111 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x53       2 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     16 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~INITRG15~ #8 // override script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!tombgu~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!seeinv~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~potn21~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~

COPY_EXISTING ~ddguard6.cre~ ~override/ddguard6.cre~
  WRITE_LONG  0x14   12000 // xp
  WRITE_SHORT 0x24     111 // current hp
  WRITE_SHORT 0x26     111 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x53       2 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     16 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~INITRG15~ #8 // override script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!tombgu~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!seeinv~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~potn43~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~

COPY_EXISTING ~sword01.cre~ ~override/sword01.cre~
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x54      13 // save vs death
  WRITE_BYTE  0x55       9 // save vs wands
  WRITE_BYTE  0x56      11 // save vs polymorph
  WRITE_BYTE  0x57      13 // save vs breath
  WRITE_BYTE  0x58      10 // save vs spell
  WRITE_BYTE  0x60      90 // resist slashing
  WRITE_BYTE  0x61      90 // resist crushing
  WRITE_BYTE  0x62      95 // resist piercing

COPY_EXISTING ~demglasu.cre~ ~override/demglasu.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~koboldsu.cre~ ~override/koboldsu.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "HELM01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BOW05" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H07" = 0) OR
             ("%item%" STRING_COMPARE_CASE "AROW08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "AROW01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~worgsu.cre~ ~override/worgsu.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~dogwisu.cre~ ~override/dogwisu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x268 ~CBEAR~ #8      // default script

COPY_EXISTING ~gnollsu.cre~ ~override/gnollsu.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~wolfdisu.cre~ ~override/wolfdisu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x248 ~~ #8 // removes override script
  WRITE_ASCII 0x268 ~CBEAR~ #8      // default script

COPY_EXISTING ~hobgobsu.cre~ ~override/hobgobsu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "LEAT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BOW05" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "AROW12" = 0) OR
             ("%item%" STRING_COMPARE_CASE "AROW01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~etter01.cre~ ~override/etter01.cre~
   WRITE_ASCII 0x250 ~S!antic3~ #8         // class script

COPY_EXISTING ~ettercsu.cre~ ~override/ettercsu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script

COPY_EXISTING ~etter01.cre~ ~override/S!etter.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RNDTRE03" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~ogregrsu.cre~ ~override/ogregrsu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x258 ~S!rancm1~ #8      // race script
  WRITE_ASCII 0x268 ~S!alsuc1~ #8      // default script

COPY_EXISTING ~ghastsu.cre~ ~override/ghastsu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x250 ~S!rancm1~ #8      // class script
  WRITE_ASCII 0x258 ~S!alsuc1~ #8      // race script
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~

COPY_EXISTING ~grskel1.cre~ ~override/grskel1.cre~
  WRITE_BYTE  0x60      50 // resist slashing
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~

COPY_EXISTING ~grskel2.cre~ ~override/grskel2.cre~
  WRITE_BYTE  0x60      50 // resist slashing
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~

COPY_EXISTING ~rskel01.cre~ ~override/rskel01.cre~
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~

COPY_EXISTING ~rskel03.cre~ ~override/rskel03.cre~
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~

COPY_EXISTING ~skelet01.cre~ ~override/skelet01.cre~
  WRITE_SHORT 0x24      30 // current hp
  WRITE_SHORT 0x26      30 // max hp
  WRITE_BYTE  0x52      16 // thac0
  WRITE_BYTE  0x54       9 // save vs death
  WRITE_BYTE  0x55      11 // save vs wands
  WRITE_BYTE  0x56      10 // save vs polymorph
  WRITE_BYTE  0x57      12 // save vs breath
  WRITE_BYTE  0x58      12 // save vs spell
  WRITE_BYTE  0x238     18 // strength
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~

COPY_EXISTING ~skelsu01.cre~ ~override/skelsu01.cre~
              ~skelsu07.cre~ ~override/skelsu07.cre~
              ~skelsu11.cre~ ~override/skelsu11.cre~
  WRITE_BYTE  0x60      50        // resist slashing
  WRITE_ASCII 0x258 ~S!antic3~ #8 // race script
  WRITE_ASCII 0x260 ~S!ransm2~ #8 // general script
  WRITE_ASCII 0x268 ~S!alsus1~ #8 // default script
  WRITE_BYTE  0x272   0x73        // race

COPY_EXISTING ~skelwasu.cre~ ~override/skelwasu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x260 ~S!ransm3~ #8       // general script
  WRITE_ASCII 0x268 ~S!alsus3~ #8      // default script
  WRITE_BYTE  0x272   0x73 // race

COPY_EXISTING ~skelwa01.cre~ ~override/skelwa01.cre~
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x260 ~S!ransm1~ #8       // general script

COPY_EXISTING ~skelwa.cre~ ~override/skelwa.cre~
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x260 ~S!ransm1~ #8       // general script

COPY_EXISTING ~mumgre01.cre~ ~override/mumgre01.cre~
  WRITE_BYTE  0x59      25 // resist fire
  WRITE_BYTE  0x5e      25 // resist magic fire
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!rancm4~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~mummy01.cre~ ~override/mummy01.cre~
  WRITE_SHORT 0x24      72 // current hp
  WRITE_SHORT 0x26      72 // max hp
  WRITE_BYTE  0x52      12 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x59      25 // resist fire
  WRITE_BYTE  0x5e      25 // resist magic fire
  WRITE_BYTE  0x234      9 // level
  WRITE_ASCII 0x248 ~S!anticu~ #8 // override script
  WRITE_ASCII 0x268 ~S!rancm3~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~dogwasu.cre~ ~override/dogwasu.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~bearblsu.cre~ ~override/bearblsu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x268 ~CBEAR~ #8      // default script

COPY_EXISTING ~bearbrsu.cre~ ~override/bearbrsu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x268 ~CBEAR~ #8      // default script

COPY_EXISTING ~bearcasu.cre~ ~override/bearcasu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x268 ~CBEAR~ #8      // default script

COPY_EXISTING ~catjagsu.cre~ ~override/catjagsu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x268 ~CBEAR~ #8      // default script

COPY_EXISTING ~catliosu.cre~ ~override/catliosu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x268 ~CBEAR~ #8      // default script

COPY_EXISTING ~wolfwwsu.cre~ ~override/wolfwwsu.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "misc01" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~bearposu.cre~ ~override/bearposu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x250 ~S!rancm3~ #8      // class script
  WRITE_ASCII 0x258 ~CBEAR~ #8      // race script
  WRITE_ASCII 0x260 ~SUMSHT02~ #8       // general script

COPY_EXISTING ~servsu.cre~ ~override/servsu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x250 ~S!antic3~ #8      // class script
  WRITE_ASCII 0x258 ~S!rancm4~ #8      // race script
  WRITE_ASCII 0x268 ~S!alsuc4~ #8      // default script

COPY_EXISTING ~spidswsu.cre~ ~override/spidswsu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x260 ~S!ranpm1~ #8       // general script
  WRITE_ASCII 0x268 ~S!alsup1~ #8      // default script

COPY_EXISTING ~spidphsu.cre~ ~override/spidphsu.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~spidgisu.cre~ ~override/spidgisu.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~stalke.cre~ ~override/stalke.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x52      13 // thac0
  WRITE_BYTE  0x5d      30 // resist magic
  WRITE_ASCII 0x250 ~S!antic3~ #8      // class script
  WRITE_ASCII 0x258 ~S!rancm2~ #8      // race script
  WRITE_ASCII 0x268 ~S!alsuc2~ #8      // default script
  WRITE_BYTE  0x273     0xba // class elemental air

COPY_EXISTING ~elemchan.cre~ ~override/elemchan.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x234     17 // level
  WRITE_ASCII 0x250 ~S!antic3~ #8      // class script
  WRITE_ASCII 0x258 ~S!rancm4~ #8      // race script
  WRITE_ASCII 0x268 ~S!elepri~ #8      // default script
  ADD_CRE_ITEM ~immune3~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~

COPY_EXISTING ~tomegol4.cre~ ~override/tomegol4.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x52       3 // thac0

COPY_EXISTING ~tomegol3.cre~ ~override/tomegol3.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~tomegol1.cre~ ~override/tomegol1.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x52      12 // thac0

COPY_EXISTING ~wyvernsu.cre~ ~override/wyvernsu.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "misc52" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

// Ribald
COPY_EXISTING ~ribald.cre~ ~override/ribald.cre~
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "ring31" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00000010) // set Unstealable flag
  END
 END

COPY_EXISTING ~tolger.cre~ ~override/tolger.cre~
 WRITE_ASCII 0x260 ~mage18d~ #8       // general script
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "ring33" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00000010) // set Unstealable flag
  END
END

COPY_EXISTING ~sctelwyn.cre~ ~override/sctelwyn.cre~
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "helm03" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00000010) // set Unstealable flag
  END
END

COPY_EXISTING ~pbhunt05.cre~ ~override/pbhunt05.cre~
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "boot01" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
  END
END

COPY_EXISTING ~trthf01.cre~ ~override/trthf01.cre~
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "brac18" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
  END
END

COPY_EXISTING ~arnwar07.cre~ ~override/arnwar07.cre~
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "ring35" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
  END
END

COPY_EXISTING ~arnman09.cre~ ~override/arnman09.cre~
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "ring35" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
  END
END

COPY_EXISTING ~reti.cre~ ~override/reti.cre~
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "boot04" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001000) // set undroppable flag
  END
END

COPY_EXISTING ~gaal01.cre~ ~override/gaal01.cre~
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "belt09" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
  END
END

COPY_EXISTING ~trrak01.cre~ ~override/trrak01.cre~
 WRITE_ASCII 0x248 ~~ #8 // removes override script
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "amul22" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
  END
END

COPY_EXISTING ~trrak02.cre~ ~override/trrak02.cre~
 WRITE_ASCII 0x248 ~~ #8 // removes override script
 WRITE_ASCII 0x258 ~raksha02~ #8      // race script
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "staf19" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
  END
END

COPY_EXISTING ~trrak03.cre~ ~override/trrak03.cre~
 WRITE_ASCII 0x248 ~~ #8 // removes override script
 WRITE_ASCII 0x250 ~TRRAK02~ #8       // class script
 WRITE_ASCII 0x258 ~raksha02~ #8      // race script

COPY_EXISTING ~udtrap01.cre~ ~override/udtrap01.cre~
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "sw1h38" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
  END
END

COPY_EXISTING ~udsvir03.cre~ ~override/udsvir03.cre~
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "misc9r" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00000010) // set Unstealable flag
  END
END

COPY_EXISTING ~talmiss.cre~ ~override/talmiss.cre~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "misc4y" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~hlkang.cre~ ~override/hlkang.cre~
 WRITE_BYTE  0x52       5 // thac0
 WRITE_BYTE  0x5c     100 // resist acid
 WRITE_BYTE  0x23f     20 // morale
 WRITE_BYTE  0x240      1 // morale Break
 WRITE_BYTE  0x242      1 // morale Recovery
 WRITE_ASCII 0x248 ~~ #8 // removes override script
 WRITE_ASCII 0x250 ~S!hlkang~ #8       // class script
 WRITE_ASCII 0x268 ~~ #8       // removes default script
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "ring39" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00000010) // set Unstealable flag
  END
END

COPY_EXISTING ~trgeni02.cre~ ~override/trgeni02.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "misc3c" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~RING10~ #8 // write new item
  END
END

COPY_EXISTING ~senpri01.cre~ ~override/senpri01.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "shld31" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~DWSHLD01~ #8 // write new item
  END
END

COPY_EXISTING ~kalah2.cre~ ~override/kalah2.cre~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
    READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
    PATCH_IF ("%item%" STRING_COMPARE_CASE "ring30" = 0) BEGIN // find old item
      WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~RING10~ #8 // write new item
    END
  END
  REPLACE_CRE_ITEM ~scrl1v~ #0 #0 #0 ~NONE~ ~INV6~

COPY_EXISTING ~bhcapt01.cre~ ~override/bhcapt01.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "xbow03" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~XBOW01~ #8 // write new item
  END
END

COPY_EXISTING ~vvshad5.cre~ ~override/vvshad5.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "scrl7d" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~SCRL6Z~ #8 // write new item
  END
END

COPY_EXISTING ~daelf.cre~ ~override/daelf.cre~
  SAY NAME1     @458
  SAY NAME2     @458

COPY_EXISTING ~daelf2.cre~ ~override/daelf2.cre~
  SAY NAME1     @458
  SAY NAME2     @458

COPY_EXISTING ~drofod01.cre~ ~override/S!drofod.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_SHORT 0x24     138 // current hp
  WRITE_SHORT 0x26     138 // max hp
  WRITE_BYTE  0x52       0 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5b      50 // resist electricity
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      75 // resist magic fire
  WRITE_BYTE  0x5f      50 // resist magic cold
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     21 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     76 // strength % bonus
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23d     18 // constitution
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x240      2 // morale Break
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!senfig~ #8      // default script
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~helmnoan~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~dwshld01~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~SHIELD~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "CHAN13" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H55" = 0) OR
             ("%item%" STRING_COMPARE_CASE "POTN52" = 0) OR
             ("%item%" STRING_COMPARE_CASE "POTN20" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~drofod01.cre~ ~override/drofod01.cre~
  WRITE_LONG  0x14   15500 // xp
  WRITE_LONG  0x1c     100 // gold
  WRITE_SHORT 0x24     138 // current hp
  WRITE_SHORT 0x26     138 // max hp
  WRITE_BYTE  0x52       0 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5b      50 // resist electricity
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      75 // resist magic fire
  WRITE_BYTE  0x5f      50 // resist magic cold
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     21 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     76 // strength % bonus
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23d     18 // constitution
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x240      2 // morale Break
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!senfig~ #8      // default script
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~helmnoan~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~dwshld01~ #0 #0 #0 ~UNSTEALABLE~ ~SHIELD~
  ADD_CRE_ITEM ~potn55~ #3 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  ADD_CRE_ITEM ~potn52~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM3~

COPY_EXISTING ~daqilue.cre~ ~override/daqilue.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "dagg14" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~DAGG01~ #8 // write new item
  END
END

COPY_EXISTING ~lich01.cre~ ~override/lich01.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_BYTE  0x52       7 // thac0
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x240      2 // morale Break
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~lichel01.cre~ ~override/lichel01.cre~
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x5c     100 // resist acid
  WRITE_BYTE  0x234     25 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~scrl9m~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM1~

COPY_EXISTING ~hllich.cre~ ~override/hllich.cre~
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x5c     100 // resist acid
  WRITE_BYTE  0x234     25 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~scrl9m~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM1~

COPY_EXISTING ~nevaziah.cre~ ~override/nevaziah.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_BYTE  0x52       7 // thac0
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x60      25 // resist slashing
  WRITE_BYTE  0x62      25 // resist piercing
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~jael04.cre~ ~override/jael04.cre~
  WRITE_LONG  0x14   12000 // xp
  WRITE_LONG  0x1c      20 // gold
  WRITE_SHORT 0x24     117 // current hp
  WRITE_SHORT 0x26     117 // max hp
  WRITE_BYTE  0x52       3 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     18 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23d     17 // constitution
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~helmnoan~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~dwshld01~ #0 #0 #0 ~UNSTEALABLE~ ~SHIELD~

COPY_EXISTING ~jarlaxle.cre~ ~override/jarlaxle.cre~
  WRITE_LONG  0x1c      2500 // gold

COPY_EXISTING ~pthral05.cre~ ~override/pthral05.cre~
 WRITE_BYTE  0x53       1 // number of attacks
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "sw1h25" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~SW1H09~ #8 // write new item
  END
END

COPY_EXISTING ~elfirpr2.cre~ ~override/elfirpr2.cre~
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23f     17 // morale

COPY_EXISTING ~elfirsu3.cre~ ~override/elfirsu3.cre~
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23f     17 // morale

COPY_EXISTING ~elearpr2.cre~ ~override/elearpr2.cre~
  WRITE_BYTE  0x238     20 // strength
  WRITE_BYTE  0x23f     17 // morale

COPY_EXISTING ~elairsu1.cre~ ~override/elairsu1.cre~
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23f     16 // morale

COPY_EXISTING ~elairsuw.cre~ ~override/elairsuw.cre~
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23f     16 // morale

COPY_EXISTING ~elairsu2.cre~ ~override/elairsu2.cre~
  WRITE_BYTE  0x238     20 // strength
  WRITE_BYTE  0x23f     17 // morale

COPY_EXISTING ~elearsuw.cre~ ~override/elearsuw.cre~
  WRITE_BYTE  0x238     18 // strength

COPY_EXISTING ~elearsu1.cre~ ~override/elearsu1.cre~
  WRITE_BYTE  0x238     18 // strength

COPY_EXISTING ~elearsu3.cre~ ~override/elearsu3.cre~
  WRITE_BYTE  0x238     20 // strength
  WRITE_BYTE  0x23f     17 // morale

COPY_EXISTING ~sumelair.cre~ ~override/sumelair.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_SHORT 0x28     0x7321 // animation
  WRITE_BYTE  0x238     18 // strength
  WRITE_ASCII 0x248 ~~ #8 // removes override script
  WRITE_ASCII 0x250 ~S!antic3~ #8      // class script
  WRITE_ASCII 0x258 ~S!rancm3~ #8      // race script
  WRITE_ASCII 0x260 ~S!alsuc3~ #8       // general script

COPY_EXISTING ~sumelear.cre~ ~override/sumelear.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x238     18 // strength
  WRITE_ASCII 0x248 ~~ #8 // removes override script
  WRITE_ASCII 0x250 ~S!antic3~ #8      // class script
  WRITE_ASCII 0x258 ~S!rancm3~ #8      // race script
  WRITE_ASCII 0x260 ~S!alsuc3~ #8       // general script

COPY_EXISTING ~sumelfir.cre~ ~override/sumelfir.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_SHORT 0x28     0x7311 // animation
  WRITE_BYTE  0x238     18 // strength
  WRITE_ASCII 0x250 ~S!antic3~ #8      // class script
  WRITE_ASCII 0x258 ~S!rancm3~ #8      // race script
  WRITE_ASCII 0x268 ~S!alsuc3~ #8      // default script

COPY_EXISTING ~cowenf3.cre~ ~override/cowenf3.cre~
  WRITE_LONG  0x14   12000 // xp
  WRITE_SHORT 0x24      61 // current hp
  WRITE_SHORT 0x26      61 // max hp
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x258 ~~ #8      // removes race script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~staf02~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~
  ADD_CRE_ITEM ~scrl7p~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~potn52~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM2~

COPY_EXISTING ~cowenf4.cre~ ~override/cowenf4.cre~
  WRITE_LONG  0x14   9000 // xp
  WRITE_SHORT 0x24      41 // current hp
  WRITE_SHORT 0x26      41 // max hp
  WRITE_BYTE  0x52      15 // thac0
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x258 ~~ #8      // removes race script
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~staf02~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~
  ADD_CRE_ITEM ~scrl5h~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RNDTRE05" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~hgwra02.cre~ ~override/hgwra03.cre~
  WRITE_ASCII 0x260 ~~ #8       // removes general script

COPY_EXISTING ~sdshadfi.cre~ ~override/sdshadfi.cre~
  WRITE_BYTE  0x5b       0 // resist electricity

COPY_EXISTING ~sewsha01.cre~ ~override/sewsha01.cre~
  WRITE_BYTE  0x5b       0 // resist electricity

COPY_EXISTING ~sewsha02.cre~ ~override/sewsha02.cre~
  WRITE_BYTE  0x5b       0 // resist electricity

COPY_EXISTING ~shadfi01.cre~ ~override/shadfi01.cre~
  WRITE_BYTE  0x5b       0 // resist electricity
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x260 ~S!melee0~ #8       // general script

COPY_EXISTING ~telslav.cre~ ~override/telslav.cre~
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x234     15 // level
  WRITE_ASCII 0x268 ~S!vamp3~ #8       // default script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "telslav" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~vamp1~ #8 // write new item
   END
END

COPY_EXISTING ~golada01.cre~ ~override/golada01.cre~
  WRITE_LONG  0x14  20000 // xp
  ADD_CRE_ITEM ~S!adaman~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "goliro" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!goliro~ #8 // write new item
   END
END

COPY_EXISTING ~golkill2.cre~ ~override/golkill2.cre~
  WRITE_LONG  0x14  20000 // xp
  ADD_CRE_ITEM ~S!adaman~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "goliro" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!goliro~ #8 // write new item
   END
END

COPY_EXISTING ~goljug01.cre~ ~override/goljug01.cre~
  WRITE_LONG  0x14   6400 // xp

COPY_EXISTING ~udtrap02.cre~ ~override/udtrap02.cre~
  WRITE_LONG  0x14   15000 // xp
  WRITE_SHORT 0x24      63 // current hp
  WRITE_SHORT 0x26      63 // max hp
  WRITE_BYTE  0x52      14 // thac0
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~~ #8 // removes override script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~udair.cre~ ~override/udair.cre~
  WRITE_LONG  0x14    3000 // xp

COPY_EXISTING ~udearth.cre~ ~override/udearth.cre~
  WRITE_LONG  0x14    3000 // xp

COPY_EXISTING ~udfire.cre~ ~override/udfire.cre~
  WRITE_LONG  0x14    3000 // xp

COPY_EXISTING ~dstone1.cre~ ~override/dstone1.cre~
 WRITE_LONG  0x14    5000 // xp
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "B3-24" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~GOLSTO~ #8 // write new item
  END
END

COPY_EXISTING ~igolem02.cre~ ~override/igolem02.cre~
 WRITE_LONG  0x14        0 // xp
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "B3-30" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!GOLCLA~ #8 // write new item
  END
END

COPY_EXISTING ~igolfle1.cre~ ~override/igolfle1.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "B2-16" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!GOLFLE~ #8 // write new item
  END
END

COPY_EXISTING ~igolfle2.cre~ ~override/igolfle2.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "B2-16" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!GOLFLE~ #8 // write new item
  END
END

COPY_EXISTING ~igolfle3.cre~ ~override/igolfle3.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "B2-16" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!GOLFLE~ #8 // write new item
  END
END

COPY_EXISTING ~igolfle4.cre~ ~override/igolfle4.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "B2-16" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!GOLFLE~ #8 // write new item
  END
END

COPY_EXISTING ~demglab2.cre~ ~override/demglab2.cre~
 WRITE_LONG  0x14        0 // xp
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "ringdemn" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~RING95~ #8 // write new item
  END
END

COPY_EXISTING ~m05demon.cre~ ~override/m05demon.cre~
 WRITE_LONG  0x14        0 // xp
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "ringdemn" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~RING92~ #8 // write new item
  END
END

COPY_EXISTING ~golcla01.cre~ ~override/golcla01.cre~
  WRITE_LONG  0x14    6400 // xp

COPY_EXISTING ~goliro01.cre~ ~override/goliro01.cre~
  WRITE_LONG  0x14   10000 // xp
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "goliro" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!goliro~ #8 // write new item
   END
END

COPY_EXISTING ~gordeckb.cre~ ~override/gordeckb.cre~
  ADD_CRE_ITEM ~S!adaman~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "goliro" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!goliro~ #8 // write new item
   END
END

COPY_EXISTING ~gorgoli.cre~ ~override/gorgoli.cre~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "goliro" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!goliro~ #8 // write new item
   END
END

COPY_EXISTING ~golsan01.cre~ ~override/golsan01.cre~
  WRITE_LONG  0x14    5700 // xp

COPY_EXISTING ~golsto01.cre~ ~override/golsto01.cre~
  WRITE_LONG  0x14    5000 // xp

COPY_EXISTING ~gorgrd01.cre~ ~override/gorgrd01.cre~
  WRITE_LONG  0x14   10000 // xp
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "goliro" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!goliro~ #8 // write new item
   END
END

COPY_EXISTING ~gorgrd02.cre~ ~override/gorgrd02.cre~
  WRITE_LONG  0x14   10000 // xp
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "goliro" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!goliro~ #8 // write new item
   END
END

COPY_EXISTING ~gorsta08.cre~ ~override/gorsta08.cre~
  WRITE_LONG  0x14   10000 // xp
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "goliro" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!goliro~ #8 // write new item
   END
END

COPY_EXISTING ~jugjug01.cre~ ~override/jugjug01.cre~
  WRITE_LONG  0x14    5000 // xp
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "B3-24" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~GOLSTO~ #8 // write new item
   END
END

COPY_EXISTING ~kpgol02.cre~ ~override/kpgol02.cre~
  WRITE_LONG  0x14    6400 // xp

COPY_EXISTING ~kpgol03.cre~ ~override/kpgol03.cre~
  WRITE_LONG  0x14    5000 // xp

COPY_EXISTING ~kpgol04.cre~ ~override/kpgol04.cre~
  WRITE_LONG  0x14   10000 // xp
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "goliro" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!goliro~ #8 // write new item
   END
END

COPY_EXISTING ~kpgol05.cre~ ~override/kpgol05.cre~
  WRITE_LONG  0x14    5000 // xp

COPY_EXISTING ~sarfakie.cre~ ~override/sarfakie.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~sarfaki2.cre~ ~override/sarfaki2.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~otyugh.cre~ ~override/otyugh.cre~
  WRITE_LONG  0x14    1400 // xp
  WRITE_BYTE  0x23f     14 // morale

COPY_EXISTING ~otyugh01.cre~ ~override/otyugh01.cre~
  WRITE_LONG  0x14    1400 // xp
  WRITE_BYTE  0x23f     14 // morale

COPY_EXISTING ~eleoty01.cre~ ~override/eleoty01.cre~
  WRITE_LONG  0x14    3000 // xp
  WRITE_BYTE  0x234     10 // level
  WRITE_BYTE  0x23f     14 // morale

COPY_EXISTING ~deck615.cre~ ~override/deck615.cre~
  WRITE_SHORT 0x24     132 // current hp
  WRITE_SHORT 0x26     132 // max hp
  WRITE_BYTE  0x52      1 // thac0
  WRITE_BYTE  0x54      3 // save vs death
  WRITE_BYTE  0x55      5 // save vs wands
  WRITE_BYTE  0x56      4 // save vs polymorph
  WRITE_BYTE  0x57      4 // save vs breath
  WRITE_BYTE  0x58      6 // save vs spell
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x235     18 // level secondary class
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!rngdmn~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~bodtan.cre~ ~override/bodtan.cre~
  WRITE_LONG  0x14   13500 // xp
  WRITE_SHORT 0x24      75 // current hp
  WRITE_SHORT 0x26      75 // max hp
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!bodtan~ #8 // override script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~potn11~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~

COPY_EXISTING ~gith01.cre~ ~override/gith01.cre~
  WRITE_LONG  0x14    6500 // xp
  WRITE_SHORT 0x24     100 // current hp
  WRITE_SHORT 0x26     100 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!gith~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "potn10" = 0) BEGIN
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~potn52~ #8
   END
END

COPY_EXISTING ~gith02.cre~ ~override/gith02.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24     110 // current hp
  WRITE_SHORT 0x26     110 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!gith~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "potn10" = 0) BEGIN
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~potn52~ #8
   END
END

COPY_EXISTING ~gith03.cre~ ~override/gith03.cre~
  WRITE_LONG  0x14    8500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       4 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!gith~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "potn10" = 0) BEGIN
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~potn52~ #8
   END
END

COPY_EXISTING ~gith04.cre~ ~override/gith04.cre~
  WRITE_SHORT 0x24      56 // current hp
  WRITE_SHORT 0x26      56 // max hp
  WRITE_BYTE  0x52      13 // thac0
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x57      12 // save vs breath
  WRITE_BYTE  0x234      8 // level
  WRITE_BYTE  0x235      8 // level secondary class
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_BYTE  0x273     0x7 // class fighter mage
  ADD_CRE_ITEM ~S!gith~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~

COPY_EXISTING ~mekrat.cre~ ~override/mekrat.cre~
 WRITE_LONG  0x14    8500 // xp
 WRITE_BYTE  0x52      15 // thac0
 WRITE_BYTE  0x54      10 // save vs death
 WRITE_BYTE  0x55       5 // save vs wands
 WRITE_BYTE  0x56       7 // save vs polymorph
 WRITE_BYTE  0x57       9 // save vs breath
 WRITE_BYTE  0x58       6 // save vs spell
 WRITE_BYTE  0x59      75 // resist fire
 WRITE_BYTE  0x5a      75 // resist cold
 WRITE_BYTE  0x5b      40 // resist electricity
 WRITE_BYTE  0x5c      75 // resist acid
 WRITE_BYTE  0x234     17 // level
 WRITE_BYTE  0x23f     19 // morale
 WRITE_BYTE  0x240      1 // morale Break
 WRITE_BYTE  0x242      1 // morale Recovery
 WRITE_ASCII 0x258 ~~ #8      // removes race script
 WRITE_ASCII 0x268 ~~ #8      // removes default script
 ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
 ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
 ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "clck10" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~scrl3g~ #8 // write new item
  END
END

COPY_EXISTING ~flyfgt04.cre~ ~override/flyfgt04.cre~
  WRITE_LONG  0x14   13000 // xp
  WRITE_SHORT 0x24      88 // current hp
  WRITE_SHORT 0x26      88 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e      75 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x235     13 // level secondary class
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23a     18 // intelligence
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_BYTE  0x273     0x7 // class fighter mage
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "clck10" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~clck01~ #8 // write new item
   END
END

COPY_EXISTING ~jaga1.cre~ ~override/jaga1.cre~
  WRITE_LONG  0x14   13000 // xp
  WRITE_SHORT 0x24      88 // current hp
  WRITE_SHORT 0x26      88 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e      75 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x235     13 // level secondary class
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     91 // strength % bonus
  WRITE_BYTE  0x23a     18 // intelligence
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_BYTE  0x273     0x7 // class fighter mage
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~jangit02.cre~ ~override/jangit02.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "clck10" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~clck01~ #8 // write new item
  END
END

COPY_EXISTING ~jaga3.cre~ ~override/jaga3.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "ring08" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~ring06~ #8 // write new item
  END
 END
 LAUNCH_PATCH_FUNCTION ~SET_CRE_ITEM_FLAGS~ STR_VAR
   item_to_change = ~ohringwi~
   flags = ~UNSTEALABLE&UNDROPPABLE~
 END

COPY_EXISTING ~ppmind01.cre~ ~override/ppmind01.cre~
 WRITE_LONG  0x14    4000 // xp
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "sw2h12" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~miscal~ #8 // write new item
  END
END

COPY_EXISTING ~ppdjinn2.cre~ ~override/ppdjinn2.cre~
 WRITE_LONG  0x14    5000 // xp

COPY_EXISTING ~pptroll1.cre~ ~override/pptroll1.cre~
 WRITE_LONG  0x14    3000 // xp
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "sw1h45" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~miscal~ #8 // write new item
  END
END

COPY_EXISTING ~ppumb02.cre~ ~override/ppumb02.cre~
  WRITE_LONG  0x14    3000 // xp
  WRITE_SHORT 0x24      74 // current hp
  WRITE_SHORT 0x26      74 // max hp
  WRITE_BYTE  0x52      11 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234     10 // level
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~kpumb01.cre~ ~override/kpumb01.cre~
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234     10 // level
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~udill02.cre~ ~override/udill02.cre~
  WRITE_SHORT 0x24      74 // current hp
  WRITE_SHORT 0x26      74 // max hp
  WRITE_BYTE  0x52      11 // thac0
  WRITE_BYTE  0x53       3 // number of attacks
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234     10 // level
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~udumber.cre~ ~override/udumber.cre~
  WRITE_LONG  0x14    3000 // xp
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234     10 // level
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~ppworker.cre~ ~override/ppworker.cre~
  WRITE_LONG  0x14   15000 // xp
  WRITE_SHORT 0x24      63 // current hp
  WRITE_SHORT 0x26      63 // max hp
  WRITE_BYTE  0x52      14 // thac0
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!drgrng~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~dagg03~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~

COPY_EXISTING ~mage18a.cre~ ~override/mage18a.cre~
  WRITE_LONG  0x14   15000 // xp
  WRITE_SHORT 0x24      63 // current hp
  WRITE_SHORT 0x26      63 // max hp
  WRITE_BYTE  0x52      14 // thac0
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~staf18~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~ TWOHANDED

COPY_EXISTING ~uddoor05.cre~ ~override/uddoor05.cre~
  WRITE_LONG  0x14   15000 // xp
  WRITE_SHORT 0x24      63 // current hp
  WRITE_SHORT 0x26      63 // max hp
  WRITE_BYTE  0x52      14 // thac0
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~

COPY_EXISTING ~jarlich.cre~ ~override/jarlich.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_SHORT 0x24      63 // current hp
  WRITE_SHORT 0x26      63 // max hp
  WRITE_BYTE  0x52       7 // thac0
  WRITE_BYTE  0x58       3 // save vs spell
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~udtrap04.cre~ ~override/udtrap04.cre~
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       3 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       7 // save vs breath
  WRITE_BYTE  0x58       4 // save vs spell
  WRITE_BYTE  0x5c     100 // resist acid
  WRITE_BYTE  0x234     25 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~mage20b~ #8       // class script
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~hgmag01.cre~ ~override/hgmag01.cre~
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~hgmag02.cre~ ~override/hgmag02.cre~
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~sendai7.cre~ ~override/sendai7.cre~
  WRITE_BYTE  0x234     25 // level
  WRITE_ASCII 0x250 ~mage20a~ #8       // class script

COPY_EXISTING ~sewyag04.cre~ ~override/sewyag04.cre~
  WRITE_SHORT 0x24      68 // current hp
  WRITE_SHORT 0x26      68 // max hp
  WRITE_BYTE  0x52      12 // thac0
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     25 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_ASCII 0x250 ~mage20a~ #8       // class script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~celich.cre~ ~override/celich.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x235      1 // level secondary class
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~mage18d~ #8       // class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~lich~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "staf01" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~lich02~ #8 // write new item
   END
END

COPY_EXISTING ~cederil.cre~ ~override/cederil.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x235      1 // level secondary class
  WRITE_BYTE  0x238     17 // strength
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~jclone01.cre~ ~override/jclone01.cre~
  WRITE_LONG  0x14    3500 // xp
  WRITE_SHORT 0x24     105 // current hp
  WRITE_SHORT 0x26     105 // max hp
  WRITE_BYTE  0x52       7 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     14 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     91 // strength % bonus
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~icyuan02.cre~ ~override/icyuan02.cre~
  WRITE_LONG  0x14   14000 // xp
  WRITE_SHORT 0x24     152 // current hp
  WRITE_SHORT 0x26     152 // max hp
  WRITE_BYTE  0x52       2 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      30 // resist slashing
  WRITE_BYTE  0x61      30 // resist crushing
  WRITE_BYTE  0x62      30 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     19 // level
  WRITE_BYTE  0x238     21 // strength
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~S!antic2~ #8       // class script
  WRITE_ASCII 0x268 ~S!rancm4~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "SW1H04" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!yuansu~ #8 // write new item
   END
END

COPY_EXISTING ~gorsta01.cre~ ~override/gorsta01.cre~
 WRITE_LONG  0x14   15000 // xp
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "sw1h62" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~sw1h02~ #8 // write new item
  END
END

COPY_EXISTING ~gorsta07.cre~ ~override/gorsta07.cre~
 WRITE_LONG  0x14   15000 // xp
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "sw1h67" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~sw1h02~ #8 // write new item
  END
END

COPY_EXISTING ~senill02.cre~ ~override/senill02.cre~
  WRITE_SHORT 0x24     160 // current hp
  WRITE_SHORT 0x26     160 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x235      1 // level secondary class
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~~ #8 // removes override script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~uddoor06.cre~ ~override/uddoor06.cre~
  WRITE_SHORT 0x24     117 // current hp
  WRITE_SHORT 0x26     117 // max hp
  WRITE_BYTE  0x52       3 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5d      76 // resist magic
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x235     18 // level secondary class
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  WRITE_BYTE  0x273     0x8 // class fighter cleric
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~dwplat01~ #0 #0 #0 ~UNSTEALABLE~ ~ARMOR~
  ADD_CRE_ITEM ~dwshld01~ #0 #0 #0 ~UNSTEALABLE~ ~SHIELD~
  ADD_CRE_ITEM ~dwblun01~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~
  ADD_CRE_ITEM ~ring06~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~potn10~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM1~

COPY_EXISTING ~drow07.cre~ ~override/drow07.cre~
  WRITE_LONG  0x14    9000 // xp
  WRITE_SHORT 0x24     117 // current hp
  WRITE_SHORT 0x26     117 // max hp
  WRITE_BYTE  0x52       3 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x235     18 // level secondary class
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~~ #8 // removes override script
  WRITE_ASCII 0x260 ~pries18a~ #8       // general script
  WRITE_ASCII 0x268 ~S!antic3~ #8      // default script
  WRITE_BYTE  0x273     0x8 // class fighter cleric
  WRITE_BYTE  0x27b     0x13 // alignment
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~dwplat01~ #0 #0 #0 ~UNSTEALABLE~ ~ARMOR~
  ADD_CRE_ITEM ~dwshld01~ #0 #0 #0 ~UNSTEALABLE~ ~SHIELD~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~dwblun01~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE~ ~LRING~
  ADD_CRE_ITEM ~potn10~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM1~

COPY_EXISTING ~drow06.cre~ ~override/drow06.cre~
  WRITE_LONG  0x14    8500 // xp
  WRITE_SHORT 0x24      61 // current hp
  WRITE_SHORT 0x26      61 // max hp
  WRITE_BYTE  0x52      15 // thac0
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~~ #8  // removes override script
  WRITE_ASCII 0x250 ~mage16a~ #8       // class script
  WRITE_ASCII 0x260 ~S!antic3~ #8       // general script
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RNDTRE02" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~uddrow27.cre~ ~override/uddrow27.cre~
  WRITE_LONG  0x14    9500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       2 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     19 // level
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~~ #8       // removes class script
  WRITE_ASCII 0x268 ~S!weapb3~ #8      // default script
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~helmnoan~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~dwshld01~ #0 #0 #0 ~UNSTEALABLE~ ~SHIELD~

COPY_EXISTING ~dgfig01.cre~ ~override/dgfig01.cre~
  WRITE_LONG  0x14    6500 // xp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~

COPY_EXISTING ~dgmag01.cre~ ~override/dgmag01.cre~
  WRITE_LONG  0x14    2000 // xp
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~staf01~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~ TWOHANDED

COPY_EXISTING ~cefgt01.cre~ ~override/cefgt01.cre~
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x258 ~~ #8      // removes race script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~

COPY_EXISTING ~cefgt02.cre~ ~override/cefgt02.cre~
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~

COPY_EXISTING ~udumb02.cre~ ~override/udumb02.cre~
  WRITE_LONG  0x14    3000 // xp
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234     10 // level
  WRITE_ASCII 0x248 ~S!antich~ #8 // override script
  WRITE_ASCII 0x250 ~gensht01~ #8         // class script
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~umbhul01.cre~ ~override/umbhul01.cre~
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234     10 // level
  WRITE_ASCII 0x248 ~S!antich~ #8 // override script
  WRITE_ASCII 0x250 ~gensht01~ #8         // class script
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~umbhul02.cre~ ~override/umbhul02.cre~
  WRITE_LONG  0x14    6000 // xp
  WRITE_BYTE  0x234     12 // level
  WRITE_ASCII 0x248 ~S!antich~ #8 // override script
  WRITE_ASCII 0x250 ~gensht01~ #8         // class script
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~mindfl01.cre~ ~override/mindfl01.cre~
  WRITE_LONG  0x14    4000 // xp
  WRITE_BYTE  0x52      12 // thac0
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x248 ~S!antich~ #8 // override script
  WRITE_ASCII 0x250 ~gensht01~ #8         // class script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~ppguard4.cre~ ~override/ppguard4.cre~
  WRITE_LONG  0x14    8500 // xp
  WRITE_SHORT 0x24      61 // current hp
  WRITE_SHORT 0x26      61 // max hp
  WRITE_BYTE  0x52      14 // thac0
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23a     17 // intelligence
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x258 ~mage16m~ #8      // race script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~ring06~ #0 #0 #0 ~UNSTEALABLE~ ~LRING~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "sw1h08" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~staf06~ #8 // write new item
   END
END

COPY_EXISTING ~drow06.cre~ ~override/drofod02.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold

COPY_EXISTING ~polyrat.cre~ ~override/polyrat.cre~
  WRITE_BYTE  0x60      0 // resist slashing
  WRITE_BYTE  0x61      0 // resist crushing
  WRITE_BYTE  0x62      0 // resist piercing
  WRITE_BYTE  0x63      0 // resist missile

COPY_EXISTING ~plytroll.cre~ ~override/plytroll.cre~
  WRITE_BYTE  0x52      15 // thac0
  WRITE_BYTE  0x53       1 // number of attacks

COPY_EXISTING ~polyochr.cre~ ~override/polyochr.cre~
  WRITE_BYTE  0x52      15 // thac0
  WRITE_BYTE  0x63      50 // resist missile

COPY_EXISTING ~uddrow18.cre~ ~override/uddrow18.cre~
  WRITE_SHORT 0x24      61 // current hp
  WRITE_SHORT 0x26      61 // max hp
  WRITE_BYTE  0x52      16 // thac0
  WRITE_BYTE  0x54      11 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57      11 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~uddrow18~ #8         // class script
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~

COPY_EXISTING ~uddrow19.cre~ ~override/uddrow19.cre~
  WRITE_SHORT 0x24      61 // current hp
  WRITE_SHORT 0x26      61 // max hp
  WRITE_BYTE  0x52      15 // thac0
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~uddrow19~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~

COPY_EXISTING ~behgau01.cre~ ~override/behgau01.cre~
  WRITE_LONG  0x14    4500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x248 ~S!antich~ #8 // override script
  WRITE_ASCII 0x250 ~gensht01~ #8         // class script
  WRITE_ASCII 0x268 ~S!rancm3~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~behold01.cre~ ~override/behold01.cre~
  WRITE_LONG  0x14    8000 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x248 ~S!antich~ #8 // override script
  WRITE_ASCII 0x250 ~gensht01~ #8         // class script
  WRITE_ASCII 0x268 ~S!rancm3~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~beheld01.cre~ ~override/beheld01.cre~
  WRITE_LONG  0x14    9000 // xp
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x248 ~S!antich~ #8 // override script
  WRITE_ASCII 0x250 ~gensht01~ #8         // class script
  WRITE_ASCII 0x268 ~S!rancm3~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~beholder~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~

COPY_EXISTING ~cultbh1.cre~ ~override/cultbh1.cre~
  WRITE_LONG  0x14    4500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x248 ~S!antich~ #8 // override script
  WRITE_ASCII 0x250 ~gensht01~ #8         // class script
  WRITE_ASCII 0x268 ~S!rancm3~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "P2-16" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~behold~ #8 // write new item
   END
END

COPY_EXISTING ~cultbh2.cre~ ~override/cultbh2.cre~
  WRITE_LONG  0x14    4500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x248 ~S!antich~ #8 // override script
  WRITE_ASCII 0x250 ~gensht01~ #8         // class script
  WRITE_ASCII 0x268 ~S!rancm3~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "P2-16" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~behold~ #8 // write new item
   END
END

COPY_EXISTING ~cultbh3.cre~ ~override/cultbh3.cre~
  WRITE_LONG  0x14    8000 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x248 ~S!antich~ #8 // override script
  WRITE_ASCII 0x250 ~gensht01~ #8         // class script
  WRITE_ASCII 0x268 ~S!rancm3~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~beholder~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "P2-16" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~behold~ #8 // write new item
   END
END

COPY_EXISTING ~cultbh4.cre~ ~override/cultbh4.cre~
  WRITE_LONG  0x14    8000 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234      9 // level
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x240      2 // morale Break
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x248 ~S!antich~ #8 // override script
  WRITE_ASCII 0x250 ~gensht01~ #8         // class script
  WRITE_ASCII 0x268 ~S!rancm3~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~beholder~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "P2-8" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~behold~ #8 // write new item
   END
END

COPY_EXISTING ~cow.cre~ ~override/cow.cre~
  WRITE_ASCII 0x260 ~S!anima1~ #8       // general script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~ncow.cre~ ~override/ncow.cre~
  WRITE_ASCII 0x260 ~S!anima1~ #8       // general script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~ncat.cre~ ~override/ncat.cre~
  WRITE_ASCII 0x260 ~S!anima1~ #8       // general script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~nchick.cre~ ~override/nchick.cre~
  WRITE_ASCII 0x260 ~S!anima1~ #8       // general script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~nhorse.cre~ ~override/nhorse.cre~
  WRITE_ASCII 0x260 ~S!anima1~ #8       // general script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~chicke.cre~ ~override/chicke.cre~
  WRITE_ASCII 0x260 ~S!anima1~ #8       // general script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~rat.cre~ ~override/rat.cre~
  WRITE_ASCII 0x258 ~S!anima1~ #8      // race script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~cat.cre~ ~override/cat.cre~
  WRITE_ASCII 0x258 ~S!anima1~ #8      // race script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~ndog.cre~ ~override/ndog.cre~
  WRITE_ASCII 0x248 ~S!anima3~ #8 // override script
  WRITE_ASCII 0x250 ~WILDDOG~ #8         // class script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~moose01.cre~ ~override/moose01.cre~
  WRITE_ASCII 0x250 ~S!anima1~ #8         // class script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~squirl.cre~ ~override/squirl.cre~
  WRITE_ASCII 0x250 ~S!anima1~ #8         // class script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~squirr.cre~ ~override/squirr.cre~
  WRITE_ASCII 0x250 ~S!anima1~ #8         // class script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~rabbit01.cre~ ~override/rabbit01.cre~
  WRITE_ASCII 0x250 ~S!anima1~ #8         // class script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~gemch01.cre~ ~override/gemch01.cre~
  WRITE_ASCII 0x248 ~S!anima2~ #8 // override script
  WRITE_ASCII 0x250 ~gemchick~ #8         // class script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~gemch02.cre~ ~override/gemch02.cre~
  WRITE_ASCII 0x248 ~S!anima2~ #8 // override script
  WRITE_ASCII 0x250 ~gemchick~ #8         // class script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~deer01.cre~ ~override/deer01.cre~
  WRITE_ASCII 0x248 ~S!anima1~ #8 // override script
  WRITE_ASCII 0x250 ~genshy~ #8         // class script
  WRITE_ASCII 0x258 ~prey~ #8      // race script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~grhog01.cre~ ~override/grhog01.cre~
  WRITE_ASCII 0x250 ~S!anima1~ #8         // class script
  WRITE_ASCII 0x258 ~prey~ #8      // race script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~bearbr.cre~ ~override/bearbr.cre~
  WRITE_ASCII 0x248 ~S!anima3~ #8 // override script
  WRITE_ASCII 0x250 ~SUMSHT02~ #8         // class script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~beargr.cre~ ~override/beargr.cre~
  WRITE_LONG  0x14      0 // xp
  WRITE_ASCII 0x248 ~S!anima3~ #8 // override script
  WRITE_ASCII 0x250 ~SUMSHT02~ #8         // class script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~pheas01.cre~ ~override/pheas01.cre~
  WRITE_ASCII 0x250 ~S!anima1~ #8         // class script
  WRITE_ASCII 0x258 ~genshy~ #8      // race script
  WRITE_ASCII 0x260 ~prey~ #8       // general script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~catliowp.cre~ ~override/catliowp.cre~
 WRITE_LONG  0x14      0 // xp
 WRITE_SHORT 0x24     80 // current hp
 WRITE_SHORT 0x26     80 // max hp
 WRITE_BYTE  0x52     11 // thac0
 WRITE_BYTE  0x54      8 // save vs death
 WRITE_BYTE  0x55     10 // save vs wands
 WRITE_BYTE  0x56      9 // save vs polymorph
 WRITE_BYTE  0x57      9 // save vs breath
 WRITE_BYTE  0x58     11 // save vs spell
 WRITE_BYTE  0x234    10 // level
 WRITE_BYTE  0x23f    17 // morale
 WRITE_BYTE  0x240     3 // morale Break
 WRITE_BYTE  0x242     3 // morale Recovery
 WRITE_ASCII 0x258 ~S!ranpm3~ #8      // race script
 WRITE_ASCII 0x268 ~S!alsup3~ #8      // default script
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "catlio" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!catlio~ #8 // write new item
  END
END
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "S!catlio" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00000010) // set Unstealable flag
  END
END

COPY_EXISTING ~ar18mage.cre~ ~override/ar18mage.cre~
  WRITE_LONG  0x14    8500 // xp
  WRITE_LONG  0x1c     500 // gold
  WRITE_SHORT 0x24      61 // current hp
  WRITE_SHORT 0x26      61 // max hp
  WRITE_BYTE  0x52      15 // thac0
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~mage14c~ #8  // override script
  WRITE_ASCII 0x250 ~GPSHOUT~ #8       // class script
  WRITE_ASCII 0x258 ~~ #8      // removes race script
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  REPLACE_CRE_ITEM ~scrl9m~ #0 #0 #0 ~NONE~ ~INV1~

COPY_EXISTING ~c6drizz3.cre~ ~override/c6drizz3.cre~
  WRITE_SHORT 0x24      98 // current hp
  WRITE_SHORT 0x26      98 // max hp
  WRITE_BYTE  0x52       3 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x234     18 // level

COPY_EXISTING ~c6drizz2.cre~ ~override/c6drizz2.cre~
  WRITE_SHORT 0x24      98 // current hp
  WRITE_SHORT 0x26      98 // max hp
  WRITE_BYTE  0x52       3 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x234     18 // level

COPY_EXISTING ~c6drizz.cre~ ~override/c6drizz.cre~
  WRITE_SHORT 0x24      98 // current hp
  WRITE_SHORT 0x26      98 // max hp
  WRITE_BYTE  0x52       3 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x234     18 // level

COPY_EXISTING ~gorbat5.cre~ ~override/gorbat5.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~demosum1.cre~ ~override/demosum1.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~demosum2.cre~ ~override/demosum2.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~demosum3.cre~ ~override/demosum3.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~dglab01.cre~ ~override/dglab01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~demcor01.cre~ ~override/demcor01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~telalu1.cre~ ~override/telalu1.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "CHAN08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H52" = 0) OR
             ("%item%" STRING_COMPARE_CASE "DART04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "POTN52" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~demsuc01.cre~ ~override/demsuc01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~gortan3.cre~ ~override/gortan3.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~dimp01.cre~ ~override/dimp01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~deriny01.cre~ ~override/deriny01.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "SW1H05" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~gorgith2.cre~ ~override/gorgith2.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~spellh01.cre~ ~override/spellh01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~wauksqu.cre~ ~override/wauksqu.cre~
  WRITE_ASCII 0x250 ~S!squi01~ #8         // class script
  WRITE_ASCII 0x2cc ~iasqui01~ #8       // dialogue

COPY_EXISTING ~hactong.cre~ ~override/hactong.cre~
  WRITE_ASCII 0x248 ~~ #8  // removes override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!invis~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~

COPY_EXISTING ~dcowl1.cre~ ~override/dcowl1.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24      63 // current hp
  WRITE_SHORT 0x26      63 // max hp
  WRITE_BYTE  0x52      14 // thac0
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~mvguard1.cre~ ~override/mvguard1.cre~
  WRITE_LONG  0x14    4500 // xp
  WRITE_SHORT 0x24      70 // current hp
  WRITE_SHORT 0x26      70 // max hp
  WRITE_BYTE  0x52      11 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x235     11 // level secondary class
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x248 ~S!mvguar~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~potn10~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM1~

COPY_EXISTING ~weregrdr.cre~ ~override/weregrdr.cre~
  ADD_CRE_ITEM ~immune1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "ringloup" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~RINGWOLF~ #8 // write new item
   END
END

COPY_EXISTING ~pptiax2.cre~ ~override/pptiax2.cre~
  WRITE_ASCII 0x248 ~ASYLUM~ #8 // override script
  WRITE_ASCII 0x250 ~S!pptiax~ #8         // class script
  WRITE_ASCII 0x258 ~GPSHOUT~ #8      // race script
  WRITE_ASCII 0x260 ~THICLR10~ #8       // general script

COPY_EXISTING ~ppnalj2.cre~ ~override/ppnalj2.cre~
  WRITE_ASCII 0x258 ~S!ppnalj~ #8      // race script
  WRITE_ASCII 0x260 ~GPSHOUT~ #8       // general script

COPY_EXISTING ~ppdra2.cre~ ~override/ppdra2.cre~
  WRITE_ASCII 0x248 ~ASYLUM~ #8 // override script
  WRITE_ASCII 0x250 ~S!ppdra2~ #8         // class script
  WRITE_ASCII 0x258 ~GPSHOUT~ #8      // race script
  WRITE_ASCII 0x260 ~MAGE16M~ #8       // general script

COPY_EXISTING ~ppwanev2.cre~ ~override/ppwanev2.cre~
  WRITE_ASCII 0x248 ~ASYLUM~ #8 // override script
  WRITE_ASCII 0x250 ~S!ppdra2~ #8         // class script
  WRITE_ASCII 0x258 ~GPSHOUT~ #8      // race script
  WRITE_ASCII 0x260 ~MAGE18d~ #8       // general script
  WRITE_ASCII 0x268 ~WTASIGHT~ #8      // default script

COPY_EXISTING ~ppaph2.cre~ ~override/ppaph2.cre~
  WRITE_ASCII 0x248 ~ASYLUM~ #8 // override script
  WRITE_ASCII 0x250 ~S!ppaph2~ #8         // class script
  WRITE_ASCII 0x258 ~GPSHOUT~ #8      // race script

COPY_EXISTING ~udmind10.cre~ ~override/udmind10.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x248 ~UDMPSWN~ #8 // override script
  WRITE_ASCII 0x250 ~GENSHT01~ #8         // class script

COPY_EXISTING ~vvdel.cre~ ~override/vvdel.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x260 ~~ #8       // general script
  WRITE_ASCII 0x268 ~S!vamp1~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vvmale1.cre~ ~override/vvmale1.cre~
  WRITE_LONG  0x14    6500 // xp
  WRITE_SHORT 0x24     110 // current hp
  WRITE_SHORT 0x26     110 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x250 ~S!vvdel~ #8         // class script
  WRITE_ASCII 0x260 ~~ #8       // general script
  WRITE_ASCII 0x268 ~S!vamp1~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vvmale2.cre~ ~override/vvmale2.cre~
  WRITE_LONG  0x14    6500 // xp
  WRITE_SHORT 0x24     110 // current hp
  WRITE_SHORT 0x26     110 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x250 ~S!vvdel~ #8         // class script
  WRITE_ASCII 0x260 ~~ #8       // general script
  WRITE_ASCII 0x268 ~S!vamp1~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vvtanov.cre~ ~override/vvtanov.cre~
  WRITE_LONG  0x14    8500 // xp
  WRITE_SHORT 0x24     130 // current hp
  WRITE_SHORT 0x26     130 // max hp
  WRITE_BYTE  0x52       4 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x268 ~S!vamp3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vvmale3.cre~ ~override/vvmale3.cre~
  WRITE_LONG  0x14    6500 // xp
  WRITE_SHORT 0x24     110 // current hp
  WRITE_SHORT 0x26     110 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x268 ~S!vamp1~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vvmale4.cre~ ~override/vvmale4.cre~
  WRITE_LONG  0x14    6500 // xp
  WRITE_SHORT 0x24     110 // current hp
  WRITE_SHORT 0x26     110 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x268 ~S!vamp1~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~c6valen.cre~ ~override/c6valen.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x268 ~S!vamp3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~c6harei.cre~ ~override/c6harei.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x268 ~S!vamp3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~c6salia.cre~ ~override/c6salia.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x268 ~S!vamp3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~c6mere.cre~ ~override/c6mere.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x268 ~S!vamp3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~c6tanov.cre~ ~override/c6tanov.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x268 ~S!vamp3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vamflf01.cre~ ~override/vamflf01.cre~
  WRITE_LONG  0x14    6500 // xp
  WRITE_SHORT 0x24     110 // current hp
  WRITE_SHORT 0x26     110 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!vamp1~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vamflm01.cre~ ~override/vamflm01.cre~
  WRITE_LONG  0x14    6500 // xp
  WRITE_SHORT 0x24     110 // current hp
  WRITE_SHORT 0x26     110 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!vamp1~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~c6vflm01.cre~ ~override/c6vflm01.cre~
  WRITE_LONG  0x14    6500 // xp
  WRITE_SHORT 0x24     110 // current hp
  WRITE_SHORT 0x26     110 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~c6weak~ #8 // override script
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x268 ~S!vamp1~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vamemi01.cre~ ~override/vamemi01.cre~
  SAY NAME1     @11030
  SAY NAME2     @11030
  WRITE_LONG  0x14    8500 // xp
  WRITE_SHORT 0x24     130 // current hp
  WRITE_SHORT 0x26     130 // max hp
  WRITE_BYTE  0x52       4 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!vamp3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vamanc01.cre~ ~override/vamanc01.cre~
  WRITE_LONG  0x14    8000 // xp
  WRITE_SHORT 0x24     125 // current hp
  WRITE_SHORT 0x26     125 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     16 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!vamp3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "immune3" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~IMMUNE2~ #8 // write new item
   END
END

COPY_EXISTING ~vamver01.cre~ ~override/vamver01.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24     125 // current hp
  WRITE_SHORT 0x26     125 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x260 ~VAMEMI01~ #8       // general script
  WRITE_ASCII 0x268 ~S!vamp3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "vamp" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~VAMP1~ #8 // write new item
   END
END

COPY_EXISTING ~vamold01.cre~ ~override/vamold01.cre~
  WRITE_LONG  0x14    7000 // xp
  WRITE_SHORT 0x24     115 // current hp
  WRITE_SHORT 0x26     115 // max hp
  WRITE_BYTE  0x52       7 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     14 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!vamp2~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vampim01.cre~ ~override/vampim01.cre~
  WRITE_LONG  0x14    6000 // xp
  WRITE_SHORT 0x24     105 // current hp
  WRITE_SHORT 0x26     105 // max hp
  WRITE_BYTE  0x52       9 // thac0
  WRITE_BYTE  0x58      10 // save vs spell
  WRITE_BYTE  0x234     12 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!vamp2~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vampat01.cre~ ~override/vampat01.cre~
  SAY NAME1     @11030
  SAY NAME2     @11030
  WRITE_LONG  0x14    8500 // xp
  WRITE_SHORT 0x24     130 // current hp
  WRITE_SHORT 0x26     130 // max hp
  WRITE_BYTE  0x52       4 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x258 ~PPVAMPIR~ #8      // race script
  WRITE_ASCII 0x260 ~VAMEMI01~ #8       // general script
  WRITE_ASCII 0x268 ~S!vamp3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vamemi01.cre~ ~override/S!vamemr.cre~
  WRITE_ASCII 0x248 ~S!anticu~ #8 // override script

COPY_EXISTING ~chevil08.cre~ ~override/chevil08.cre~
  WRITE_LONG  0x14    9500 // xp
  WRITE_SHORT 0x24     140 // current hp
  WRITE_SHORT 0x26     140 // max hp
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x234     19 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x258 ~VAMPIR01~ #8      // race script
  WRITE_ASCII 0x268 ~S!vamp3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "vamp" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~VAMP1~ #8 // write new item
   END
END
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "amul25" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!nevm4~ #8 // write new item
   END
END

COPY_EXISTING ~lassal.cre~ ~override/lassal.cre~
  WRITE_SHORT 0x24     115 // current hp
  WRITE_SHORT 0x26     115 // max hp
  WRITE_BYTE  0x52       7 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     14 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x268 ~S!vamp1~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~bodvam01.cre~ ~override/bodvam01.cre~
  WRITE_LONG  0x14    6000 // xp
  WRITE_SHORT 0x24     105 // current hp
  WRITE_SHORT 0x26     105 // max hp
  WRITE_BYTE  0x52       9 // thac0
  WRITE_BYTE  0x54       7 // save vs death
  WRITE_BYTE  0x55       9 // save vs wands
  WRITE_BYTE  0x56       8 // save vs polymorph
  WRITE_BYTE  0x57       8 // save vs breath
  WRITE_BYTE  0x58      10 // save vs spell
  WRITE_BYTE  0x234     12 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~BODVAM01~ #8 // override script
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x268 ~S!vamp2~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~bodvam02.cre~ ~override/bodvam02.cre~
  WRITE_LONG  0x14    6000 // xp
  WRITE_SHORT 0x24     105 // current hp
  WRITE_SHORT 0x26     105 // max hp
  WRITE_BYTE  0x52       9 // thac0
  WRITE_BYTE  0x54       7 // save vs death
  WRITE_BYTE  0x55       9 // save vs wands
  WRITE_BYTE  0x56       8 // save vs polymorph
  WRITE_BYTE  0x57       8 // save vs breath
  WRITE_BYTE  0x58      10 // save vs spell
  WRITE_BYTE  0x234     12 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~BODVAM02~ #8 // override script
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x268 ~S!vamp2~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~sarvam02.cre~ ~override/sarvam02.cre~
  WRITE_LONG  0x14    7000 // xp
  WRITE_SHORT 0x24     115 // current hp
  WRITE_SHORT 0x26     115 // max hp
  WRITE_BYTE  0x52       7 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x234     14 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~SARVAM02~ #8 // override script
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x260 ~C6VAMPIR~ #8       // general script
  WRITE_ASCII 0x268 ~S!vamp2~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter

COPY_EXISTING ~sarvam03.cre~ ~override/sarvam03.cre~
  WRITE_LONG  0x14    7000 // xp
  WRITE_SHORT 0x24     115 // current hp
  WRITE_SHORT 0x26     115 // max hp
  WRITE_BYTE  0x52       7 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x234     14 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~SARVAM02~ #8 // override script
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x260 ~C6VAMPIR~ #8       // general script
  WRITE_ASCII 0x268 ~S!vamp2~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter

COPY_EXISTING ~vampif01.cre~ ~override/vampif01.cre~
  SAY NAME1     @11030
  SAY NAME2     @11030
  WRITE_LONG  0x14    8500 // xp
  WRITE_SHORT 0x24     130 // current hp
  WRITE_SHORT 0x26     130 // max hp
  WRITE_BYTE  0x52       4 // thac0
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!vamp4~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~immune3~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "vamp" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~VAMP1~ #8 // write new item
   END
END

COPY_EXISTING ~vampim01.cre~ ~override/vampim01.cre~
  SAY NAME1     @11030
  SAY NAME2     @11030
  WRITE_LONG  0x14    8500 // xp
  WRITE_SHORT 0x24     130 // current hp
  WRITE_SHORT 0x26     130 // max hp
  WRITE_BYTE  0x52       4 // thac0
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!vamp4~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~immune3~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "vamp" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~VAMP1~ #8 // write new item
   END
END

COPY_EXISTING ~c6vamp01.cre~ ~override/c6vamp01.cre~
  WRITE_LONG  0x14    6000 // xp
  WRITE_SHORT 0x24     105 // current hp
  WRITE_SHORT 0x26     105 // max hp
  WRITE_BYTE  0x52       9 // thac0
  WRITE_BYTE  0x58      10 // save vs spell
  WRITE_BYTE  0x234     12 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!vamp2~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~amncen1.cre~ ~override/amncen1.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "sper01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~amnleg1.cre~ ~override/amnleg1.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "sper01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~cowenf1.cre~ ~override/cowenf1.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~staf01~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~WEAPON1~ TWOHANDED
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RNDTRE05" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~jolus.cre~ ~override/jolus.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat14" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SHLD30" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "sw1h07" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~william.cre~ ~override/william.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SHLD01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "AX1H01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~alex.cre~ ~override/alex.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SHLD13" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H20" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~ryan.cre~ ~override/ryan.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SHLD13" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H20" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~alhel.cre~ ~override/alhel.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~staf01~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~WEAPON1~ TWOHANDED
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~hendak.cre~ ~override/hendak.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BLUN04" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~slcent.cre~ ~override/slcent.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BOW03" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H04" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~repthf1.cre~ ~override/repthf1.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "SW1H43" = 0) OR
             ("%item%" STRING_COMPARE_CASE "XBOW01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~sarmil01.cre~ ~override/sarmil01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x234      9 // level
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "sper01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~sarmil02.cre~ ~override/sarmil02.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "sw2h11" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~amnlegs.cre~ ~override/amnlegs.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "sper01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~bersersu.cre~ ~override/bersersu.cre~
  WRITE_ASCII 0x260 ~S!antic3~ #8      // general script
  WRITE_ASCII 0x268 ~S!berseh~ #8      // default script

COPY_EXISTING ~berser02.cre~ ~override/berser02.cre~
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_ASCII 0x260 ~S!antic3~ #8      // general script
  WRITE_ASCII 0x268 ~S!berseh~ #8      // default script

COPY_EXISTING ~berser03.cre~ ~override/berser03.cre~
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_ASCII 0x260 ~S!antic3~ #8      // general script
  WRITE_ASCII 0x268 ~S!berseh~ #8      // default script

COPY_EXISTING ~trolgi01.cre~ ~override/trolgi01.cre~
  WRITE_ASCII 0x250 ~S!antic3~ #8      // class script
  WRITE_ASCII 0x268 ~S!ranpm2~ #8      // default script

COPY_EXISTING ~troll01.cre~ ~override/troll01.cre~
  WRITE_SHORT 0x24      64 // current hp
  WRITE_SHORT 0x26      64 // max hp
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x55      12 // save vs wands
  WRITE_BYTE  0x56      11 // save vs polymorph
  WRITE_BYTE  0x57      12 // save vs breath
  WRITE_BYTE  0x58      13 // save vs spell
  WRITE_BYTE  0x238     18 // strength
  WRITE_ASCII 0x260 ~S!antic3~ #8      // general script
  WRITE_ASCII 0x268 ~S!ranpm2~ #8      // default script

COPY_EXISTING ~troluo01.cre~ ~override/troluo01.cre~
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x55      12 // save vs wands
  WRITE_BYTE  0x56      11 // save vs polymorph
  WRITE_BYTE  0x57      12 // save vs breath
  WRITE_BYTE  0x58      13 // save vs spell
  WRITE_ASCII 0x250 ~S!antic3~ #8      // class script
  WRITE_ASCII 0x268 ~S!ranpm2~ #8      // default script

COPY_EXISTING ~trolsi01.cre~ ~override/trolsi01.cre~
  WRITE_LONG  0x14    3000 // xp
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!ranpm3~ #8      // default script

COPY_EXISTING ~trolsp01.cre~ ~override/trolsp01.cre~
  WRITE_LONG  0x14    2500 // xp
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!ranpm3~ #8      // default script

COPY_EXISTING ~trolsi02.cre~ ~override/trolsi02.cre~
  WRITE_LONG  0x14    3000 // xp
  WRITE_ASCII 0x248 ~~ #8 // removes override script

COPY_EXISTING ~trolsp02.cre~ ~override/trolsp02.cre~
  WRITE_LONG  0x14    2500 // xp
  WRITE_ASCII 0x248 ~~ #8 // removes override script

COPY_EXISTING ~trolic01.cre~ ~override/trolic01.cre~
  WRITE_SHORT 0x24      48 // current hp
  WRITE_SHORT 0x26      48 // max hp
  WRITE_BYTE  0x52      15 // thac0
  WRITE_BYTE  0x54      11 // save vs death
  WRITE_BYTE  0x55      13 // save vs wands
  WRITE_BYTE  0x56      12 // save vs polymorph
  WRITE_BYTE  0x57      13 // save vs breath
  WRITE_BYTE  0x58      14 // save vs spell
  WRITE_BYTE  0x59       0 // resist fire
  WRITE_BYTE  0x5e       0 // resist magic fire
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!ranpm2~ #8      // default script

COPY_EXISTING ~shiron.cre~ ~override/shiron.cre~
 WRITE_BYTE  0x54      10 // save vs death
 WRITE_BYTE  0x59      75 // resist fire
 WRITE_BYTE  0x5a      75 // resist cold
 WRITE_BYTE  0x5b      75 // resist electricity
 WRITE_BYTE  0x5c      75 // resist acid
 WRITE_BYTE  0x5d      75 // resist magic
 WRITE_BYTE  0x5e      75 // resist magic fire
 WRITE_BYTE  0x60       0 // resist slashing
 WRITE_BYTE  0x61       0 // resist crushing
 WRITE_BYTE  0x62       0 // resist piercing
 WRITE_BYTE  0x63       0 // resist missile
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "immune3" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~IMMUNE1~ #8 // write new item
  END
END
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "irongol" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!nobut1~ #8 // write new item
  END
END

COPY_EXISTING ~shmind.cre~ ~override/shmind.cre~
  WRITE_BYTE  0x52      13 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  ADD_CRE_ITEM ~S!nobut1~ #0 #0 #0 ~UNSTEALABLE~ ~LRING~

COPY_EXISTING ~susuneer.cre~ ~override/susuneer.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x250 ~MAGE20A~ #8      // class script

COPY_EXISTING ~udtrap03.cre~ ~override/udtrap03.cre~
  WRITE_LONG  0x14    5500 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "sper03" = 0) OR
             ("%item%" STRING_COMPARE_CASE "scrl7q" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~obsgol01.cre~ ~override/obsgol01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x60      75 // resist slashing
  WRITE_BYTE  0x62      75 // resist piercing

COPY_EXISTING ~mummy01.cre~ ~override/S!mummr.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~gibmut01.cre~ ~override/gibmut01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~behgau01.cre~ ~override/S!behgau.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~bhghoul5.cre~ ~override/bhghoul5.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RNDTRE01" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "BOW03" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~B3-12~ #8 // write new item
   END
END

COPY_EXISTING ~carrio.cre~ ~override/carrio.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x258 ~S!melee0~ #8      // race script

COPY_EXISTING ~hobarc01.cre~ ~override/hobarc01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "BOW05" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "AROW01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE03" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~hobarc02.cre~ ~override/S!hobarc.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "HELM01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "LEAT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BOW03" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "AROW02" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE03" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~hobwar01.cre~ ~override/hobwar01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "HELM01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "LEAT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE03" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~hobsha01.cre~ ~override/S!hobsha.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "HELM01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BLUN04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "LEAT04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE03" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~hobeli01.cre~ ~override/S!hobeli.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "AROW12" = 0) OR
             ("%item%" STRING_COMPARE_CASE "LEAT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BOW05" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "AROW01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE03" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~hobcap01.cre~ ~override/S!hobcap.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "HELM01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SHLD03" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SCRL56" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "POTN08" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~kobwar01.cre~ ~override/kobwar01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x260 ~S!antic3~ #8      // general script
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "SW1H07" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~kobwar01.cre~ ~override/kobarc01.cre~

COPY_EXISTING ~kobsha01.cre~ ~override/kobsha01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x52      18 // thac0
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_BYTE  0x273     0x3 // class cleric
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "BLUN04" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~kobcom01.cre~ ~override/S!kobcom.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x260 ~S!antic3~ #8      // general script
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "BOW05" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H07" = 0) OR
             ("%item%" STRING_COMPARE_CASE "AROW08" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~kobcap01.cre~ ~override/kobcap01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x52      16 // thac0
  WRITE_ASCII 0x260 ~S!antic3~ #8      // general script
  WRITE_BYTE  0x273     0x2 // class fighter
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "BOW01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H07" = 0) OR
             ("%item%" STRING_COMPARE_CASE "AROW01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~gibber01.cre~ ~override/gibber01.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RNDTRE02" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~ogrill01.cre~ ~override/ogrill01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_BYTE  0x273     0x3 // class cleric
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RNDTRE03" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~sahsss01.cre~ ~override/sahsss01.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x59       0 // resist fire
  WRITE_BYTE  0x5e       0 // resist magic fire
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~sahsss02.cre~ ~override/sahsss02.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x59       0 // resist fire
  WRITE_BYTE  0x5e       0 // resist magic fire
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~sahsss03.cre~ ~override/sahsss03.cre~
  WRITE_LONG  0x14    8500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52      15 // thac0
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59       0 // resist fire
  WRITE_BYTE  0x5e       0 // resist magic fire
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_ASCII 0x248 ~SAHDIE~ #8 // override script
  WRITE_ASCII 0x250 ~mage16a~ #8         // class script
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~ghast01.cre~ ~override/S!ghast.cre~
  WRITE_ASCII 0x248 ~S!anticu~ #8 // override script
  WRITE_ASCII 0x250 ~S!ranpm1~ #8         // class script

COPY_EXISTING ~ghast01.cre~ ~override/ghast01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x250 ~S!ranpm1~ #8         // class script
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~wraith01.cre~ ~override/S!wraith.cre~
  WRITE_ASCII 0x248 ~S!anticu~ #8 // override script
  WRITE_ASCII 0x268 ~S!ransm4~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~shadow01.cre~ ~override/shadow01.cre~
  WRITE_ASCII 0x248 ~S!anticu~ #8 // override script

COPY_EXISTING ~shadow01.cre~ ~override/S!shador.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~wraith01.cre~ ~override/wraith01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x248 ~S!anticu~ #8 // override script
  WRITE_ASCII 0x268 ~S!ransm4~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~mepair01.cre~ ~override/mepair01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~mepice01.cre~ ~override/mepice01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~mepice02.cre~ ~override/mepice02.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~mepsmo01.cre~ ~override/mepsmo01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~mepsmo02.cre~ ~override/mepsmo02.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~mepmag02.cre~ ~override/mepmag02.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~meprad02.cre~ ~override/meprad02.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~mepfir01.cre~ ~override/mepfir01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~jelgra01.cre~ ~override/jelgra01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~spidsw01.cre~ ~override/spidsw01.cre~
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x260 ~S!ranpm1~ #8      // general script

COPY_EXISTING ~spidsw01.cre~ ~override/spspider.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~S!spide3.cre~ ~override/spidgi01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~S!spide2.cre~ ~override/spidph01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~S!spider.cre~ ~override/S!spidr1.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~spidsm02.cre~ ~override/S!spidr2.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~wolfwe01.cre~ ~override/wolfwe01.cre~
  WRITE_SHORT 0x24      96 // current hp
  WRITE_SHORT 0x26      96 // max hp
  WRITE_BYTE  0x54       7 // save vs death
  WRITE_BYTE  0x55       9 // save vs wands
  WRITE_BYTE  0x56       8 // save vs polymorph
  WRITE_BYTE  0x57       8 // save vs breath
  WRITE_BYTE  0x58      10 // save vs spell
  WRITE_BYTE  0x234     12 // level
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x258 ~S!ransm1~ #8      // race script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~wolfwe01.cre~ ~override/S!wolfwe.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~kuocap01.cre~ ~override/kuolie01.cre~

COPY_EXISTING ~kuowar01.cre~ ~override/kuotoa01.cre~

COPY_EXISTING ~kuocap01.cre~ ~override/S!kuocap.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "XBOW04" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~kuomag01.cre~ ~override/S!kuomag.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~kuomon01.cre~ ~override/S!kuomon.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~kuopri01.cre~ ~override/S!kuopri.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~kuowar01.cre~ ~override/S!kuowar.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~kuowhi01.cre~ ~override/S!kuowhi.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~spmugg.cre~ ~override/spmugg.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_SHORT 0x24      76 // current hp
  WRITE_SHORT 0x26      76 // max hp
  WRITE_BYTE  0x52      11 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234      9 // level
  WRITE_BYTE  0x235     11 // level secondary class
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x248 ~S!antic4~ #8 // override script
  WRITE_ASCII 0x268 ~S!mism01~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "LEAT04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H07" = 0) OR
             ("%item%" STRING_COMPARE_CASE "XBOW04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BOLT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE02" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~spmugg2.cre~ ~override/spmugg2.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_SHORT 0x24      96 // current hp
  WRITE_SHORT 0x26      96 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x54       7 // save vs death
  WRITE_BYTE  0x55       9 // save vs wands
  WRITE_BYTE  0x56       8 // save vs polymorph
  WRITE_BYTE  0x57       8 // save vs breath
  WRITE_BYTE  0x58      10 // save vs spell
  WRITE_BYTE  0x234     11 // level
  WRITE_BYTE  0x235      1 // level secondary class
  WRITE_BYTE  0x239     91 // strength % bonus
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x240      2 // morale Break
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x248 ~S!antic4~ #8 // override script
  WRITE_ASCII 0x268 ~S!mism01~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "LEAT04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H07" = 0) OR
             ("%item%" STRING_COMPARE_CASE "XBOW04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BOLT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE02" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~spmugg3.cre~ ~override/spmugg3.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_SHORT 0x24      93 // current hp
  WRITE_SHORT 0x26      93 // max hp
  WRITE_BYTE  0x52       9 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234     10 // level
  WRITE_BYTE  0x235      1 // level secondary class
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     77 // strength % bonus
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x240      2 // morale Break
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x248 ~S!antic4~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x268 ~S!mism01~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "LEAT04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H07" = 0) OR
             ("%item%" STRING_COMPARE_CASE "XBOW04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BOLT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE02" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~jelgre01.cre~ ~override/jelgre01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~jeloch01.cre~ ~override/jeloch01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~mepooz01.cre~ ~override/mepooz01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~orc01.cre~ ~override/orc01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold
  WRITE_ASCII 0x248 ~S!antic4~ #8 // override script
  WRITE_ASCII 0x258 ~~ #8      // removes race script
  WRITE_ASCII 0x268 ~S!melee0~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "LEAT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE03" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~orc02.cre~ ~override/orc02.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x248 ~S!antic4~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x268 ~S!mism02~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~sw1h02~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~WEAPON2~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "LEAT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "HELM01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BOW03" = 0) OR
             ("%item%" STRING_COMPARE_CASE "AROW02" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE03" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~icyuan01.cre~ ~override/icyuan01.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24     108 // current hp
  WRITE_SHORT 0x26     108 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     57 // strength % bonus
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x240      2 // morale Break
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x250 ~S!antic2~ #8         // class script
  WRITE_ASCII 0x268 ~S!ransm3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "SW1H04" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!yuanti~ #8 // write new item
   END
END

COPY_EXISTING ~icyuan03.cre~ ~override/S!icyuam.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold

COPY_EXISTING ~icyuan01.cre~ ~override/S!icyuan.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~icgob01.cre~ ~override/S!icgo1.cre~

COPY_EXISTING ~icgob01.cre~ ~override/icgob01.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "BOW01" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~icgob03.cre~ ~override/S!icgob.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x238     16 // strength
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x268 ~S!melee0~ #8      // default script
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "AX1H01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE02" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~icliz01.cre~ ~override/icliz01.cre~
  WRITE_LONG  0x14    6500 // xp
  WRITE_SHORT 0x24     102 // current hp
  WRITE_SHORT 0x26     102 // max hp
  WRITE_BYTE  0x52       7 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x59      60 // resist fire
  WRITE_BYTE  0x5a      80 // resist cold
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     57 // strength % bonus
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x240      2 // morale Break
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x258 ~S!ranpm1~ #8      // race script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "HALB01" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~HALB02~ #8 // write new item
   END
END

COPY_EXISTING ~icliz01.cre~ ~override/S!icliz.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "HALB02" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE02" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~mistva01.cre~ ~override/S!mistva.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~mistpo01.cre~ ~override/mistpo01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_SHORT 0x24      72 // current hp
  WRITE_SHORT 0x26      72 // max hp
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x234     10 // level
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x268 ~S!ransm3~ #8      // default script
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~mistcd01.cre~ ~override/mistcd01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x54       7 // save vs death
  WRITE_BYTE  0x55       9 // save vs wands
  WRITE_BYTE  0x56       8 // save vs polymorph
  WRITE_BYTE  0x57       8 // save vs breath
  WRITE_BYTE  0x58      10 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x268 ~S!ransm3~ #8      // default script
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~orc05.cre~ ~override/orc06.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x52      11 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234      9 // level
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x248 ~S!antic4~ #8 // override script
  WRITE_ASCII 0x258 ~~ #8      // removes race script
  WRITE_ASCII 0x268 ~S!melee0~ #8      // default script
  WRITE_ASCII 0x280 ~orc06~ #32         // death variable
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "LEAT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW2H01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE03" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~jelmus01.cre~ ~override/jelmus01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~S!ntroll.cre~ ~override/S!ntrolr.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  WRITE_ASCII 0x280 ~S!ntrolr~ #32         // death variable

COPY_EXISTING ~mepdus01.cre~ ~override/mepdus01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x248 ~S!antic2~ #8 // override script

COPY_EXISTING ~S!ntrolr.cre~ ~override/trolde01.cre~

COPY_EXISTING ~rakruh01.cre~ ~override/S!rakruh.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x248 ~S!antic2~ #8 // override script
  WRITE_ASCII 0x250 ~RAKRUH01~ #8   // class script

COPY_EXISTING ~wolfgr01.cre~ ~override/S!wolfgr.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~shadfi01.cre~ ~override/S!shadfi.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~umbhul02.cre~ ~override/S!umbhul.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script

COPY_EXISTING ~umbhul02.cre~ ~override/S!umbhu2.cre~
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script

COPY_EXISTING ~eyesek01.cre~ ~override/eyesek01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~obsdem04.cre~ ~override/S!maurez.cre~
  WRITE_LONG  0x14        0 // xp

COPY_EXISTING ~S!phound.cre~ ~override/S!phounr.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x280 ~S!phounr~ #32         // death variable
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "MISC41" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~mistho01.cre~ ~override/S!misth1.cre~
  WRITE_LONG  0x14        0 // xp

COPY_EXISTING ~S!maurez.cre~ ~override/demmau01.cre~

COPY_EXISTING ~saralegs.cre~ ~override/saralegs.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "sper01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~vamemi01.cre~ ~override/S!vamemi.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~vamanc01.cre~ ~override/S!vamanc.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~ammlegs.cre~ ~override/ammlegs.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x23f     15 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RNDTRE02" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~reband01.cre~ ~override/reband01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold
  WRITE_SHORT 0x24      93 // current hp
  WRITE_SHORT 0x26      93 // max hp
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x234     10 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x260 ~S!antic4~ #8       // general script
  WRITE_ASCII 0x268 ~S!melee0~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "LEAT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H07" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~reband02.cre~ ~override/reband02.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold
  WRITE_SHORT 0x24      93 // current hp
  WRITE_SHORT 0x26      93 // max hp
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x234     10 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x260 ~S!antic4~ #8       // general script
  WRITE_ASCII 0x268 ~S!melee0~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "LEAT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "DAGG01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~reband03.cre~ ~override/reband03.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_SHORT 0x24      93 // current hp
  WRITE_SHORT 0x26      93 // max hp
  WRITE_BYTE  0x52      11 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234     10 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x260 ~S!antic4~ #8       // general script
  WRITE_ASCII 0x268 ~S!melee0~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "LEAT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H04" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~reband05.cre~ ~override/reband05.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_SHORT 0x24      80 // current hp
  WRITE_SHORT 0x26      80 // max hp
  WRITE_BYTE  0x52      12 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       9 // save vs wands
  WRITE_BYTE  0x56       8 // save vs polymorph
  WRITE_BYTE  0x57      11 // save vs breath
  WRITE_BYTE  0x58      10 // save vs spell
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x248 ~S!antic4~ #8 // override script
  WRITE_ASCII 0x268 ~priest12~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "CHAN01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BLUN01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~shawol01.cre~ ~override/shawol01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~shawol02.cre~ ~override/shawol02.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~catlim01.cre~ ~override/catlim01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~catlyn01.cre~ ~override/catlyn01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~catlis01.cre~ ~override/catlis01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~cattig01.cre~ ~override/cattig01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~dogwil01.cre~ ~override/dogwil01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~bearbl.cre~ ~override/bearbl.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x248 ~S!anima3~ #8 // override script
  WRITE_ASCII 0x250 ~SUMSHT02~ #8         // class script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~ankheg01.cre~ ~override/ankheg01.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~catpan01.cre~ ~override/catpan01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~gromg06.cre~ ~override/gromg06.cre~
  WRITE_SHORT 0x24     130 // current hp
  WRITE_SHORT 0x26     130 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     17 // strength % bonus
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x258 ~S!gromg6~ #8      // race script

COPY_EXISTING ~gromg07.cre~ ~override/gromg07.cre~
  WRITE_SHORT 0x24     130 // current hp
  WRITE_SHORT 0x26     130 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x258 ~S!gromg6~ #8      // race script

COPY_EXISTING ~yssold14.cre~ ~override/yssold14.cre~
  WRITE_LONG  0x14    3000 // xp
  WRITE_SHORT 0x24      61 // current hp
  WRITE_SHORT 0x26      61 // max hp
  WRITE_BYTE  0x52      15 // thac0
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e      75 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     18 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  SPRINT ~flags~ ~UNDROPPABLE&UNSTEALABLE~
  SPRINT ~item_to_change~ ~staf07~
  LAUNCH_PATCH_MACRO ~SET_CRE_ITEM_FLAGS~

COPY_EXISTING ~yssold16.cre~ ~override/yssold16.cre~
  WRITE_LONG  0x14    3000 // xp
  WRITE_SHORT 0x24      91 // current hp
  WRITE_SHORT 0x26      91 // max hp
  WRITE_BYTE  0x52      10 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       8 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57      10 // save vs breath
  WRITE_BYTE  0x58       9 // save vs spell
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e      75 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     18 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x260 ~ccler20b~ #8       // general script
  WRITE_ASCII 0x268 ~S!antic3~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~HGWAR02.cre~ ~override/S!HGWAR.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "POTN55" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "MISC16" = 0) OR
             ("%item%" STRING_COMPARE_CASE "MISC38" = 0) OR
             ("%item%" STRING_COMPARE_CASE "MISC35" = 0) OR
             ("%item%" STRING_COMPARE_CASE "MISC42" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~yssold01.cre~ ~override/yssold01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_SHORT 0x24      99 // current hp
  WRITE_SHORT 0x26      99 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     14 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     55 // strength % bonus
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x260 ~S!antic3~ #8       // general script
  WRITE_ASCII 0x268 ~S!ransm2~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~helmnoan~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~plat14~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~ARMOR~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "SW1H04" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~SW2H11~ #8 // write new item
   END
END
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "SW2H11" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~yssold03.cre~ ~override/yssold03.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       4 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     16 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     95 // strength % bonus
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x260 ~S!antic3~ #8       // general script
  WRITE_ASCII 0x268 ~S!ransm3~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~helmnoan~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~shld29~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~SHIELD~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "SW1H01" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~SW1H72~ #8 // write new item
   END
END
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "CHAN01" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~plat14~ #8 // write new item
   END
END
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "SW1H72" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "plat14" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~yssold04.cre~ ~override/yssold04.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold
  WRITE_BYTE  0x239     92 // strength % bonus
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x260 ~S!antic3~ #8       // general script
  WRITE_ASCII 0x268 ~S!ranpm2~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "HELM01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "PLAT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "HALB07" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE05" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~yssold01.cre~ ~override/yssold02.cre~

COPY_EXISTING ~c6bruen2.cre~ ~override/c6bruen2.cre~
  WRITE_BYTE  0x53       1 // number of attacks
  ADD_CRE_ITEM ~helm06~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~

COPY_EXISTING ~C6CATTI2.cre~ ~override/C6CATTI2.cre~
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  ADD_CRE_ITEM ~helm06~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~

COPY_EXISTING ~c6regis2.cre~ ~override/c6regis2.cre~
  WRITE_BYTE  0x53       1 // number of attacks
  ADD_CRE_ITEM ~helm06~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~

COPY_EXISTING ~c6wulf2.cre~ ~override/c6wulf2.cre~
  WRITE_BYTE  0x52      10 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  ADD_CRE_ITEM ~helm06~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~

COPY_EXISTING ~c6guen2.cre~ ~override/c6guen2.cre~
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~

COPY_EXISTING ~shtroll.cre~ ~override/shtroll.cre~
  WRITE_BYTE  0x52      15 // thac0
  WRITE_BYTE  0x53       1 // number of attacks

COPY_EXISTING ~shwolf.cre~ ~override/shwolf.cre~
 WRITE_BYTE  0x52      10 // thac0
 WRITE_BYTE  0x53       1 // number of attacks
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "ringwolf" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~RING10~ #8 // write new item
  END
END
 READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RING10" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~golcla01.cre~ ~override/S!golcla.cre~
  WRITE_ASCII 0x248 ~S!anticg~ #8 // override script

COPY_EXISTING ~sahsss03.cre~ ~override/S!vilmag.cre~
  WRITE_ASCII 0x248 ~~ #8 // removes override script
  WRITE_ASCII 0x250 ~mage16a~ #8         // class script
  WRITE_ASCII 0x258 ~S!chase~ #8      // race script

COPY_EXISTING ~genefr01.cre~ ~override/genefr01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x234      9 // level
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "SW1H20" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~renal.cre~ ~override/renal.cre~
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "boot01" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001000) // set undroppable flag
  END
END

COPY_EXISTING ~c6elhan.cre~ ~override/c6elhan.cre~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "SW1H50" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~suelhan.cre~ ~override/suelhan.cre~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "SW1H50" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~sensmsp2.cre~ ~override/sensmsp2.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold
  WRITE_BYTE  0x52      13 // thac0
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "HELM01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "PLAT10" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW2H11" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE03" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~elemogre.cre~ ~override/elemogre.cre~
  WRITE_LONG  0x1c    5000 // gold
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x5a     100 // resist cold
  WRITE_BYTE  0x5b      80 // resist electricity
  WRITE_BYTE  0x5c     100 // resist acid
  WRITE_BYTE  0x60     100 // resist slashing
  WRITE_BYTE  0x61      95 // resist crushing
  WRITE_BYTE  0x62      95 // resist piercing
  WRITE_BYTE  0x63     100 // resist missile
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "elemprin" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!drgrng~ #8 // write new item
   END
END

COPY_EXISTING ~demabi01.cre~ ~override/demabi01.cre~
  WRITE_SHORT 0x24     150 // current hp
  WRITE_SHORT 0x26     150 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59     100 // resist fire
  WRITE_BYTE  0x5a     100 // resist cold
  WRITE_BYTE  0x5b      80 // resist electricity
  WRITE_BYTE  0x5c     100 // resist acid
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e     100 // resist magic fire
  WRITE_BYTE  0x60      80 // resist slashing
  WRITE_BYTE  0x61      80 // resist crushing
  WRITE_BYTE  0x62      80 // resist piercing
  WRITE_BYTE  0x63      90 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x268 ~S!ransm4~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "ringdemn" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!drgrng~ #8 // write new item
   END
END

COPY_EXISTING ~elearg01.cre~ ~override/elearg01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x234     20 // level

COPY_EXISTING ~GORJELGR.cre~ ~override/GORJELGR.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~RIFTCR02.cre~ ~override/RIFTCR02.cre~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "HELM08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE05" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW2H02" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~GROMG04.cre~ ~override/GROMG04.cre~
              ~GROMG12.cre~ ~override/GROMG12.cre~
              ~KUOWAR20.cre~ ~override/KUOWAR20.cre~
              ~YARMY01.cre~ ~override/YARMY01.cre~
  SPRINT ~flags~ ~UNDROPPABLE&UNSTEALABLE~
  PATCH_FOR_EACH ~item_to_change~ IN ~sper06~
  BEGIN
    LAUNCH_PATCH_MACRO ~SET_CRE_ITEM_FLAGS~
  END

COPY_EXISTING ~LYROS.cre~ ~override/LYROS.cre~
              ~xzar.cre~ ~override/xzar.cre~
  REMOVE_CRE_ITEM ~staf07~
  ADD_CRE_ITEM ~staf02~ #0 #0 #0 ~IDENTIFIED&UNSTEALABLE~ ~weapon1~

COPY_EXISTING ~RERAK01.cre~ ~override/RERAK01.cre~
              ~SURAKW1.cre~ ~override/SURAKW1.cre~
              ~SURAKW2.cre~ ~override/SURAKW2.cre~
              ~SURAKW3.cre~ ~override/SURAKW3.cre~
              ~SURAKW4.cre~ ~override/SURAKW4.cre~
  REPLACE_CRE_ITEM ~scrl7s~ #0 #0 #0 ~NONE~ ~qitem1~

COPY_EXISTING ~KAYPAL02.CRE~ ~override/KAYPAL02.CRE~
  REMOVE_CRE_ITEM ~boot06~

COPY_EXISTING ~VVSHAD2.cre~ ~override/VVSHAD2.cre~
  REPLACE_CRE_ITEM ~scrl1v~ #0 #0 #0 ~NONE~ ~INV2~

COPY_EXISTING ~tanwiz1.cre~ ~override/tanwiz1.cre~
  WRITE_ASCII 0x248 ~~ #8 // removes override script

COPY_EXISTING ~amcarras.cre~ ~override/amcarras.cre~
  REMOVE_CRE_ITEM ~ax1h16~

COPY_EXISTING ~arkanisg.cre~ ~override/arkanisg.cre~
  REMOVE_CRE_ITEM ~ax1h09~

COPY_EXISTING ~vampyf01.cre~ ~override/vampyf01.cre~
  WRITE_BYTE 0x0272 125 // Race
  WRITE_BYTE 0x0273 163 // Class

// fix Limited Wish's rabbits to not be affected by summoning limit
COPY_EXISTING ~rabbitsu.cre~ ~override/rabbitsu.cre~
  WRITE_BYTE 0x0270 30

// remove XP reward for killing Bone Blades
COPY_EXISTING ~bonebld.cre~ ~override/bonebld.cre~
  WRITE_LONG 0x14 0 // xp

// remove XP for kill and breach scroll from cowled enforcers
COPY_EXISTING ~cowenf2.cre~ ~override/cowenf2.cre~
  WRITE_LONG  0x14       0 // xp
  REMOVE_CRE_ITEM ~scrl6u~ // breach scroll

// batch processing //

// custom animation for all skeleton lords
ACTION_FOR_EACH ~file~ IN
                ~S!skel~
                ~S!skel2~
                ~S!skel3~
                ~S!skeld~
                ~S!skell1~
                ~S!skell2~
                ~S!skell3~
                ~S!skell4~
                ~S!skell5~
                ~S!skelpp~
                ~S!skelr2~
                ~S!skels~
                ~S!skelsu~
BEGIN
  COPY_EXISTING ~%file%.cre~ ~override~
    WRITE_LONG 0x28 58112
    BUT_ONLY
END

// custom animation for all skeleton warlords
ACTION_FOR_EACH ~file~ IN
                ~S!skelfi~
                ~S!skelw2~
                ~S!skelwl~
BEGIN
  COPY_EXISTING ~%file%.cre~ ~override~
    WRITE_LONG 0x28 58144
    BUT_ONLY
END

// custom animation for all skeleton grandlords
ACTION_FOR_EACH ~file~ IN
                ~S!skelg1~
                ~S!skelg2~
                ~S!skelg3~
                ~S!skelg4~
                ~S!skelg5~
                ~S!skelg6~
                ~S!skelgr~
                ~S!skelo1~
                ~S!skelo2~
                ~S!skelo3~
                ~S!skelo4~
                ~S!skelo5~
                ~S!skelo6~
                ~S!skelo7~
                ~S!skelo8~
                ~S!skelre~
BEGIN
  COPY_EXISTING ~%file%.cre~ ~override~
    WRITE_LONG 0x28 60416
    BUT_ONLY
END

// iterate over all creatures and apply global patches
COPY_EXISTING_REGEXP GLOB ~.*\.cre~ ~override~
  // change all flesh golems' animations to ogrillons
  PATCH_IF BYTE_AT 0x273=183 BEGIN
    WRITE_LONG 0x28 28673
  END

  // patch all golems to have protection from petrification
  PATCH_IF BYTE_AT 0x272=144 BEGIN
    // prevent display of "petrified" string
    LPF ~ADD_CRE_EFFECT~ INT_VAR
      opcode = 267
      target = 1
      timing = 9
      parameter1 = 14665
      resist_dispel = 0
      duration = 0
      power = 0
    END

    // the immunity itself
    LPF ~ADD_CRE_EFFECT~ INT_VAR
      opcode = 101
      target = 1
      timing = 9
      parameter2 = 134
      resist_dispel = 0
      duration = 0
      power = 0
    END
  END

  BUT_ONLY
